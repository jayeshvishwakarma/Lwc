//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
//Methods Included: OrderControlRequest
// Primary Port Class Name: OrderControlRequestSoap 
public class WSGrexxOrderControl {

    public class grexxRequest_element {
        public WSGrexxOrderControl.header_element header;
        public WSGrexxOrderControl.requestData_element requestData;
        private String[] header_type_info = new String[] { 'header', 'http://schemas.grexx.net/atalanta/connect', '', '1', '1', 'false' };
        private String[] type_info = new String[] { 'requestData', 'http://schemas.grexx.net/atalanta/connect', '', '1', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'header', 'requestData' };
        public grexxRequest_element() {
        }
        public grexxRequest_element(WSGrexxOrderControl.header_element header, WSGrexxOrderControl.requestData_element requestData) {
            this.header = header;
            this.requestData = requestData;
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            //System.assertEquals('OrderControlRequest', outerNode.getName());

            WSGrexxOrderControl.header_element headerObj = this.header;
            Dom.XmlNode headerNode = outerNode.addChildElement('header', 'http://schemas.grexx.net/atalanta/connect', '');
            if (headerObj != null) {
                headerObj.populateXmlNode(headerNode);
            }

            WSGrexxOrderControl.requestData_element requestDataObj = this.requestData;
            Dom.XmlNode requestDataNode = outerNode.addChildElement('requestData', 'http://schemas.grexx.net/atalanta/connect', '');
            if (requestDataObj != null) {
                requestDataObj.populateXmlNode(requestDataNode);
            }
        }
    }
    public class header_element {
        public String reference;
        private String[] reference_type_info = new String[] { 'reference', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'reference' };
        public header_element() {
        }
        public header_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode referenceNode = responseNode.getChildElement('reference', 'http://schemas.grexx.net/atalanta/connect');
            this.reference = (referenceNode == null) ? null : referenceNode.getText();
            nodesParsed.add(referenceNode);
            //System.debug(this.reference);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode referenceNode = outerNode.addChildElement('reference', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.reference != null) {
                referenceNode.addTextNode(String.valueOf(this.reference));
            }
        }
    }
    public class requestData_element {
        public WSGrexxOrderControl.ordercontrol_element ordercontrol;
        private String[] type_info = new String[] { 'ordercontrol', 'http://schemas.grexx.net/atalanta/connect', '', '1', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'ordercontrol' };
        public requestData_element() {
        }
        public requestData_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode ordercontrolNode = responseNode.getChildElement('ordercontrol', 'http://schemas.grexx.net/atalanta/connect');
            if (ordercontrolNode == null) {
                this.ordercontrol = null;
            } else {
                WSGrexxOrderControl.ordercontrol_element ordercontrolObj = new WSGrexxOrderControl.ordercontrol_element(ordercontrolNode);
                nodesParsed.add(ordercontrolNode);
                this.ordercontrol = ordercontrolObj;
            }
            //System.debug(this.ordercontrol);          
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.ordercontrol_element ordercontrolObj = this.ordercontrol;
            Dom.XmlNode ordercontrolNode = outerNode.addChildElement('ordercontrol', 'http://schemas.grexx.net/atalanta/connect', '');
            if (ordercontrolObj != null) {
                ordercontrolObj.populateXmlNode(ordercontrolNode);
            }
        }
    }
    public class ordercontrol_element {
        public WSGrexxOrderControl.partner_element partner;
        public WSGrexxOrderControl.order_element order;
        private String[] partner_type_info = new String[] { 'partner', 'http://schemas.grexx.net/atalanta/connect', '', '1', '1', 'false' };
        private String[] order_type_info = new String[] { 'order', 'http://schemas.grexx.net/atalanta/connect', '', '1', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'partner', 'order' };
        public ordercontrol_element() {
        }
        public ordercontrol_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode partnerNode = responseNode.getChildElement('partner', 'http://schemas.grexx.net/atalanta/connect');
            if (partnerNode == null) {
                this.partner = null;
            } else {
                WSGrexxOrderControl.partner_element partnerObj = new WSGrexxOrderControl.partner_element(partnerNode);
                nodesParsed.add(partnerNode);
                this.partner = partnerObj;
            }
            //System.debug(this.partner);           
            DOM.XmlNode orderNode = responseNode.getChildElement('order', 'http://schemas.grexx.net/atalanta/connect');
            if (orderNode == null) {
                this.order = null;
            } else {
                WSGrexxOrderControl.order_element orderObj = new WSGrexxOrderControl.order_element(orderNode);
                nodesParsed.add(orderNode);
                this.order = orderObj;
            }
            //System.debug(this.order);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.partner_element partnerObj = this.partner;
            Dom.XmlNode partnerNode = outerNode.addChildElement('partner', 'http://schemas.grexx.net/atalanta/connect', '');
            if (partnerObj != null) {
                partnerObj.populateXmlNode(partnerNode);
            }

            WSGrexxOrderControl.order_element orderObj = this.order;
            Dom.XmlNode orderNode = outerNode.addChildElement('order', 'http://schemas.grexx.net/atalanta/connect', '');
            if (orderObj != null) {
                orderObj.populateXmlNode(orderNode);
            }
        }
    }
    public class order_access_element {
        public String productcode;
        public String producttypecode;
        public String ipvpnorderid;
        public String ipaddress;
        public Integer nrofhosts;
        public Integer maxnls;
        public String street;
        public Integer housenr;
        public String housenrext;
        public String zipcode;
        public String city;
        public Boolean hasbroadband;
        public Boolean hasphone;
        public Boolean keepvoice;
        public Integer linephonenumber;
        public Integer serviceid;
        public String israspecs;
        public Boolean outletrequired;
        public Integer linetype;
        public String wishdate;
        public WSGrexxOrderControl.order_access_secondaries_element secondaries;
        public String externalproductid;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] producttypecode_type_info = new String[] { 'producttypecode', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] ipvpnorderid_type_info = new String[] { 'ipvpnorderid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] ipaddress_type_info = new String[] { 'ipaddress', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] nrofhosts_type_info = new String[] { 'nrofhosts', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] maxnls_type_info = new String[] { 'maxnls', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] street_type_info = new String[] { 'street', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] housenr_type_info = new String[] { 'housenr', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] housenrext_type_info = new String[] { 'housenrext', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] zipcode_type_info = new String[] { 'zipcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] city_type_info = new String[] { 'city', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] hasbroadband_type_info = new String[] { 'hasbroadband', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] hasphone_type_info = new String[] { 'hasphone', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] keepvoice_type_info = new String[] { 'keepvoice', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] linephonenumber_type_info = new String[] { 'linephonenumber', 'http://schemas.grexx.net/atalanta/connect', 'int', '0', '1', 'false' };
        private String[] serviceid_type_info = new String[] { 'serviceid', 'http://schemas.grexx.net/atalanta/connect', 'int', '0', '1', 'false' };
        private String[] israspecs_type_info = new String[] { 'israspecs', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] outletrequired_type_info = new String[] { 'outletrequired', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] linetype_type_info = new String[] { 'linetype', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] wishdate_type_info = new String[] { 'wishdate', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] secondaries_type_info = new String[] { 'secondaries', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] externalproductid_type_info = new String[] { 'externalproductid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'producttypecode', 'ipvpnorderid', 'ipaddress', 'nrofhosts', 'maxnls', 'street', 'housenr', 'housenrext', 'zipcode', 'city', 'hasbroadband', 'hasphone', 'keepvoice', 'linephonenumber', 'serviceid', 'israspecs', 'outletrequired', 'linetype', 'wishdate', 'secondaries', 'externalproductid' };
        public order_access_element() {
        }
        public order_access_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode producttypecodeNode = responseNode.getChildElement('producttypecode', 'http://schemas.grexx.net/atalanta/connect');
            this.producttypecode = (producttypecodeNode == null) ? null : producttypecodeNode.getText();
            nodesParsed.add(producttypecodeNode);
            //System.debug(this.producttypecode);           
            DOM.XmlNode ipvpnorderidNode = responseNode.getChildElement('ipvpnorderid', 'http://schemas.grexx.net/atalanta/connect');
            this.ipvpnorderid = (ipvpnorderidNode == null) ? null : ipvpnorderidNode.getText();
            nodesParsed.add(ipvpnorderidNode);
            //System.debug(this.ipvpnorderid);          
            DOM.XmlNode ipaddressNode = responseNode.getChildElement('ipaddress', 'http://schemas.grexx.net/atalanta/connect');
            this.ipaddress = (ipaddressNode == null) ? null : ipaddressNode.getText();
            nodesParsed.add(ipaddressNode);
            //System.debug(this.ipaddress);         
            DOM.XmlNode nrofhostsNode = responseNode.getChildElement('nrofhosts', 'http://schemas.grexx.net/atalanta/connect');
            this.nrofhosts = (nrofhostsNode == null) ? null : Integer.valueOf(nrofhostsNode.getText());
            nodesParsed.add(nrofhostsNode);
            //System.debug(this.nrofhosts);         
            DOM.XmlNode maxnlsNode = responseNode.getChildElement('maxnls', 'http://schemas.grexx.net/atalanta/connect');
            this.maxnls = (maxnlsNode == null) ? null : Integer.valueOf(maxnlsNode.getText());
            nodesParsed.add(maxnlsNode);
            //System.debug(this.maxnls);            
            DOM.XmlNode streetNode = responseNode.getChildElement('street', 'http://schemas.grexx.net/atalanta/connect');
            this.street = (streetNode == null) ? null : streetNode.getText();
            nodesParsed.add(streetNode);
            //System.debug(this.street);            
            DOM.XmlNode housenrNode = responseNode.getChildElement('housenr', 'http://schemas.grexx.net/atalanta/connect');
            this.housenr = (housenrNode == null) ? null : Integer.valueOf(housenrNode.getText());
            nodesParsed.add(housenrNode);
            //System.debug(this.housenr);           
            DOM.XmlNode housenrextNode = responseNode.getChildElement('housenrext', 'http://schemas.grexx.net/atalanta/connect');
            this.housenrext = (housenrextNode == null) ? null : housenrextNode.getText();
            nodesParsed.add(housenrextNode);
            //System.debug(this.housenrext);            
            DOM.XmlNode zipcodeNode = responseNode.getChildElement('zipcode', 'http://schemas.grexx.net/atalanta/connect');
            this.zipcode = (zipcodeNode == null) ? null : zipcodeNode.getText();
            nodesParsed.add(zipcodeNode);
            //System.debug(this.zipcode);           
            DOM.XmlNode cityNode = responseNode.getChildElement('city', 'http://schemas.grexx.net/atalanta/connect');
            this.city = (cityNode == null) ? null : cityNode.getText();
            nodesParsed.add(cityNode);
            //System.debug(this.city);          
            DOM.XmlNode hasbroadbandNode = responseNode.getChildElement('hasbroadband', 'http://schemas.grexx.net/atalanta/connect');
            this.hasbroadband = (hasbroadbandNode == null) ? null : Boolean.valueOf(hasbroadbandNode.getText());
            nodesParsed.add(hasbroadbandNode);
            //System.debug(this.hasbroadband);          
            DOM.XmlNode hasphoneNode = responseNode.getChildElement('hasphone', 'http://schemas.grexx.net/atalanta/connect');
            this.hasphone = (hasphoneNode == null) ? null : Boolean.valueOf(hasphoneNode.getText());
            nodesParsed.add(hasphoneNode);
            //System.debug(this.hasphone);          
            DOM.XmlNode keepvoiceNode = responseNode.getChildElement('keepvoice', 'http://schemas.grexx.net/atalanta/connect');
            this.keepvoice = (keepvoiceNode == null) ? null : Boolean.valueOf(keepvoiceNode.getText());
            nodesParsed.add(keepvoiceNode);
            //System.debug(this.keepvoice);         
            DOM.XmlNode linephonenumberNode = responseNode.getChildElement('linephonenumber', 'http://schemas.grexx.net/atalanta/connect');
            this.linephonenumber = (linephonenumberNode == null) ? null : Integer.valueOf(linephonenumberNode.getText());
            nodesParsed.add(linephonenumberNode);
            //System.debug(this.linephonenumber);           
            DOM.XmlNode serviceidNode = responseNode.getChildElement('serviceid', 'http://schemas.grexx.net/atalanta/connect');
            this.serviceid = (serviceidNode == null) ? null : Integer.valueOf(serviceidNode.getText());
            nodesParsed.add(serviceidNode);
            //System.debug(this.serviceid);         
            DOM.XmlNode israspecsNode = responseNode.getChildElement('israspecs', 'http://schemas.grexx.net/atalanta/connect');
            this.israspecs = (israspecsNode == null) ? null : israspecsNode.getText();
            nodesParsed.add(israspecsNode);
            //System.debug(this.israspecs);         
            DOM.XmlNode outletrequiredNode = responseNode.getChildElement('outletrequired', 'http://schemas.grexx.net/atalanta/connect');
            this.outletrequired = (outletrequiredNode == null) ? null : Boolean.valueOf(outletrequiredNode.getText());
            nodesParsed.add(outletrequiredNode);
            //System.debug(this.outletrequired);            
            DOM.XmlNode linetypeNode = responseNode.getChildElement('linetype', 'http://schemas.grexx.net/atalanta/connect');
            this.linetype = (linetypeNode == null) ? null : Integer.valueOf(linetypeNode.getText());
            nodesParsed.add(linetypeNode);
            //System.debug(this.linetype);          
            DOM.XmlNode wishdateNode = responseNode.getChildElement('wishdate', 'http://schemas.grexx.net/atalanta/connect');
            this.wishdate = (wishdateNode == null) ? null : wishdateNode.getText();
            nodesParsed.add(wishdateNode);
            //System.debug(this.wishdate);          
            DOM.XmlNode secondariesNode = responseNode.getChildElement('secondaries', 'http://schemas.grexx.net/atalanta/connect');
            if (secondariesNode == null) {
                this.secondaries = null;
            } else {
                WSGrexxOrderControl.order_access_secondaries_element secondariesObj = new WSGrexxOrderControl.order_access_secondaries_element(secondariesNode);
                nodesParsed.add(secondariesNode);
                this.secondaries = secondariesObj;
            }
            //System.debug(this.secondaries);           
            DOM.XmlNode externalproductidNode = responseNode.getChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalproductid = (externalproductidNode == null) ? null : externalproductidNode.getText();
            nodesParsed.add(externalproductidNode);
            //System.debug(this.externalproductid);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode producttypecodeNode = outerNode.addChildElement('producttypecode', 'http://schemas.grexx.net/atalanta/connect', '');
            producttypecodeNode.addTextNode((this.producttypecode == null) ? '' : this.producttypecode);
            Dom.XmlNode ipvpnorderidNode = outerNode.addChildElement('ipvpnorderid', 'http://schemas.grexx.net/atalanta/connect', '');
            ipvpnorderidNode.addTextNode((this.ipvpnorderid == null) ? '' : this.ipvpnorderid);
            Dom.XmlNode ipaddressNode = outerNode.addChildElement('ipaddress', 'http://schemas.grexx.net/atalanta/connect', '');
            ipaddressNode.addTextNode((this.ipaddress == null) ? '' : this.ipaddress);
            Dom.XmlNode nrofhostsNode = outerNode.addChildElement('nrofhosts', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.nrofhosts != null) {
                nrofhostsNode.addTextNode(String.valueOf(this.nrofhosts));
            }
            Dom.XmlNode maxnlsNode = outerNode.addChildElement('maxnls', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.maxnls != null) {
                maxnlsNode.addTextNode(String.valueOf(this.maxnls));
            }
            Dom.XmlNode streetNode = outerNode.addChildElement('street', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.street != null) {
                streetNode.addTextNode(this.street);
            }
            Dom.XmlNode housenrNode = outerNode.addChildElement('housenr', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.housenr != null) {
                housenrNode.addTextNode(String.valueOf(this.housenr));
            }
            Dom.XmlNode housenrextNode = outerNode.addChildElement('housenrext', 'http://schemas.grexx.net/atalanta/connect', '');
            housenrextNode.addTextNode((this.housenrext == null) ? '' : this.housenrext);
            Dom.XmlNode zipcodeNode = outerNode.addChildElement('zipcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.zipcode != null) {
                zipcodeNode.addTextNode(this.zipcode);
            }
            Dom.XmlNode cityNode = outerNode.addChildElement('city', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.city != null) {
                cityNode.addTextNode(this.city);
            }
            Dom.XmlNode hasbroadbandNode = outerNode.addChildElement('hasbroadband', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.hasbroadband != null) {
                hasbroadbandNode.addTextNode(String.valueOf(this.hasbroadband));
            }
            Dom.XmlNode hasphoneNode = outerNode.addChildElement('hasphone', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.hasphone != null) {
                hasphoneNode.addTextNode(String.valueOf(this.hasphone));
            }
            Dom.XmlNode keepvoiceNode = outerNode.addChildElement('keepvoice', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.keepvoice != null) {
                keepvoiceNode.addTextNode(String.valueOf(this.keepvoice));
            }
            Dom.XmlNode linephonenumberNode = outerNode.addChildElement('linephonenumber', 'http://schemas.grexx.net/atalanta/connect', '');
            linephonenumberNode.addTextNode((this.linephonenumber == null) ? '' : String.valueOf(this.linephonenumber));
            Dom.XmlNode serviceidNode = outerNode.addChildElement('serviceid', 'http://schemas.grexx.net/atalanta/connect', '');
            serviceidNode.addTextNode((this.serviceid == null) ? '' : String.valueOf(this.serviceid));
            Dom.XmlNode israspecsNode = outerNode.addChildElement('israspecs', 'http://schemas.grexx.net/atalanta/connect', '');
            israspecsNode.addTextNode((this.israspecs == null) ? '' : this.israspecs);
            Dom.XmlNode outletrequiredNode = outerNode.addChildElement('outletrequired', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.outletrequired != null) {
                outletrequiredNode.addTextNode(String.valueOf(this.outletrequired));
            }
            Dom.XmlNode linetypeNode = outerNode.addChildElement('linetype', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.linetype != null) {
                linetypeNode.addTextNode(String.valueOf(this.linetype));
            }
            Dom.XmlNode wishdateNode = outerNode.addChildElement('wishdate', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.wishdate != null) {
                wishdateNode.addTextNode(this.wishdate);
            }

            WSGrexxOrderControl.order_access_secondaries_element secondariesObj = this.secondaries;
            Dom.XmlNode secondariesNode = outerNode.addChildElement('secondaries', 'http://schemas.grexx.net/atalanta/connect', '');
            if (secondariesObj != null) {
                secondariesObj.populateXmlNode(secondariesNode);
            }
            Dom.XmlNode externalproductidNode = outerNode.addChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect', '');
            externalproductidNode.addTextNode((this.externalproductid == null) ? '' : this.externalproductid);
        }
    }
    public class order_access_secondaries_element {
        public WSGrexxOrderControl.order_access_secondaries_secondary_element secondary;
        private String[] secondary_type_info = new String[] { 'secondary', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'secondary' };
        public order_access_secondaries_element() {
        }
        public order_access_secondaries_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode secondaryNode = responseNode.getChildElement('secondary', 'http://schemas.grexx.net/atalanta/connect');
            if (secondaryNode == null) {
                this.secondary = null;
            } else {
                WSGrexxOrderControl.order_access_secondaries_secondary_element secondaryObj = new WSGrexxOrderControl.order_access_secondaries_secondary_element(secondaryNode);
                nodesParsed.add(secondaryNode);
                this.secondary = secondaryObj;
            }
            //System.debug(this.secondary);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_access_secondaries_secondary_element secondaryObj = this.secondary;
            Dom.XmlNode secondaryNode = outerNode.addChildElement('secondary', 'http://schemas.grexx.net/atalanta/connect', '');
            if (secondaryObj != null) {
                secondaryObj.populateXmlNode(secondaryNode);
            }
        }
    }
    public class order_access_secondaries_secondary_element {
        public String productcode;
        public String ipvpnorderid;
        public String ipaddress;
        public String nrofhosts;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] ipvpnorderid_type_info = new String[] { 'ipvpnorderid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] ipaddress_type_info = new String[] { 'ipaddress', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] nrofhosts_type_info = new String[] { 'nrofhosts', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'ipvpnorderid', 'ipaddress', 'nrofhosts' };
        public order_access_secondaries_secondary_element() {
        }
        public order_access_secondaries_secondary_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode ipvpnorderidNode = responseNode.getChildElement('ipvpnorderid', 'http://schemas.grexx.net/atalanta/connect');
            this.ipvpnorderid = (ipvpnorderidNode == null) ? null : ipvpnorderidNode.getText();
            nodesParsed.add(ipvpnorderidNode);
            //System.debug(this.ipvpnorderid);          
            DOM.XmlNode ipaddressNode = responseNode.getChildElement('ipaddress', 'http://schemas.grexx.net/atalanta/connect');
            this.ipaddress = (ipaddressNode == null) ? null : ipaddressNode.getText();
            nodesParsed.add(ipaddressNode);
            //System.debug(this.ipaddress);         
            DOM.XmlNode nrofhostsNode = responseNode.getChildElement('nrofhosts', 'http://schemas.grexx.net/atalanta/connect');
            this.nrofhosts = (nrofhostsNode == null) ? null : nrofhostsNode.getText();
            nodesParsed.add(nrofhostsNode);
            //System.debug(this.nrofhosts);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode ipvpnorderidNode = outerNode.addChildElement('ipvpnorderid', 'http://schemas.grexx.net/atalanta/connect', '');
            ipvpnorderidNode.addTextNode((this.ipvpnorderid == null) ? '' : this.ipvpnorderid);
            Dom.XmlNode ipaddressNode = outerNode.addChildElement('ipaddress', 'http://schemas.grexx.net/atalanta/connect', '');
            ipaddressNode.addTextNode((this.ipaddress == null) ? '' : this.ipaddress);
            Dom.XmlNode nrofhostsNode = outerNode.addChildElement('nrofhosts', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.nrofhosts != null) {
                nrofhostsNode.addTextNode(this.nrofhosts);
            }
        }
    }
    public class order_client_element {
        public Boolean newcustomer;
        public String irmaklantid;
        public String name;
        public String street;
        public Integer housenr;
        public String housenrext;
        public String zipcode;
        public String city;
        public String countrycode;
        public String phone1; //was int
        public Integer phone2;
        public Integer fax;
        public String email;
        public String website;
        public String debitnr;
        public String legalstatus;
        public String contactname;
        public String contactphone; //was int
        //public String contactvoornaam;
        //public String contactachternaam;
        public String externalid;
        public String chamberofcommercenr;
        public String iban;
        public String bic;
        public String vatnr;
        private String[] newcustomer_type_info = new String[] { 'newcustomer', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] irmaklantid_type_info = new String[] { 'irmaklantid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] name_type_info = new String[] { 'name', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] street_type_info = new String[] { 'street', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] housenr_type_info = new String[] { 'housenr', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] housenrext_type_info = new String[] { 'housenrext', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] zipcode_type_info = new String[] { 'zipcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] city_type_info = new String[] { 'city', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] countrycode_type_info = new String[] { 'countrycode', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] phone1_type_info = new String[] { 'phone1', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] phone2_type_info = new String[] { 'phone2', 'http://schemas.grexx.net/atalanta/connect', 'int', '0', '1', 'false' };
        private String[] fax_type_info = new String[] { 'fax', 'http://schemas.grexx.net/atalanta/connect', 'int', '0', '1', 'false' };
        private String[] email_type_info = new String[] { 'email', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] website_type_info = new String[] { 'website', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] debitnr_type_info = new String[] { 'debitnr', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] legalstatus_type_info = new String[] { 'legalstatus', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] contactname_type_info = new String[] { 'contactname', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        //private String[] contactvoornaam_type_info = new String[] { 'contactvoornaam', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        //private String[] contactachternaam_type_info = new String[] { 'contactachternaam', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] contactphone_type_info = new String[] { 'contactphone', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] externalid_type_info = new String[] { 'externalid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] chamberofcommercenr_type_info = new String[] { 'chamberofcommercenr', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] iban_type_info = new String[] { 'iban', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] bic_type_info = new String[] { 'bic', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] vatnr_type_info = new String[] { 'vatnr', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'newcustomer', 'irmaklantid', 'name', 'street', 'housenr', 'housenrext', 'zipcode', 'city', 'countrycode', 'phone1', 'phone2', 'fax', 'email', 'website', 'debitnr', 'legalstatus', 'contactname', 'contactphone', 'externalid', 'chamberofcommercenr', 'iban', 'bic', 'vatnr' };
        public order_client_element() {
        }
        public order_client_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode newcustomerNode = responseNode.getChildElement('newcustomer', 'http://schemas.grexx.net/atalanta/connect');
            this.newcustomer = (newcustomerNode == null) ? null : Boolean.valueOf(newcustomerNode.getText());
            nodesParsed.add(newcustomerNode);
            //System.debug(this.newcustomer);           
            DOM.XmlNode irmaklantidNode = responseNode.getChildElement('irmaklantid', 'http://schemas.grexx.net/atalanta/connect');
            this.irmaklantid = (irmaklantidNode == null) ? null : irmaklantidNode.getText();
            nodesParsed.add(irmaklantidNode);
            //System.debug(this.irmaklantid);           
            DOM.XmlNode nameNode = responseNode.getChildElement('name', 'http://schemas.grexx.net/atalanta/connect');
            this.name = (nameNode == null) ? null : nameNode.getText();
            nodesParsed.add(nameNode);
            //System.debug(this.name);          
            DOM.XmlNode streetNode = responseNode.getChildElement('street', 'http://schemas.grexx.net/atalanta/connect');
            this.street = (streetNode == null) ? null : streetNode.getText();
            nodesParsed.add(streetNode);
            //System.debug(this.street);            
            DOM.XmlNode housenrNode = responseNode.getChildElement('housenr', 'http://schemas.grexx.net/atalanta/connect');
            this.housenr = (housenrNode == null) ? null : Integer.valueOf(housenrNode.getText());
            nodesParsed.add(housenrNode);
            //System.debug(this.housenr);           
            DOM.XmlNode housenrextNode = responseNode.getChildElement('housenrext', 'http://schemas.grexx.net/atalanta/connect');
            this.housenrext = (housenrextNode == null) ? null : housenrextNode.getText();
            nodesParsed.add(housenrextNode);
            //System.debug(this.housenrext);            
            DOM.XmlNode zipcodeNode = responseNode.getChildElement('zipcode', 'http://schemas.grexx.net/atalanta/connect');
            this.zipcode = (zipcodeNode == null) ? null : zipcodeNode.getText();
            nodesParsed.add(zipcodeNode);
            //System.debug(this.zipcode);           
            DOM.XmlNode cityNode = responseNode.getChildElement('city', 'http://schemas.grexx.net/atalanta/connect');
            this.city = (cityNode == null) ? null : cityNode.getText();
            nodesParsed.add(cityNode);
            //System.debug(this.city);          
            DOM.XmlNode countrycodeNode = responseNode.getChildElement('countrycode', 'http://schemas.grexx.net/atalanta/connect');
            this.countrycode = (countrycodeNode == null) ? null : countrycodeNode.getText();
            nodesParsed.add(countrycodeNode);
            //System.debug(this.countrycode);           
            DOM.XmlNode phone1Node = responseNode.getChildElement('phone1', 'http://schemas.grexx.net/atalanta/connect');
            this.phone1 = (phone1Node == null) ? null : phone1Node.getText(); //Integer.valueOf(phone1Node.getText());
            nodesParsed.add(phone1Node);
            //System.debug(this.phone1);            
            DOM.XmlNode phone2Node = responseNode.getChildElement('phone2', 'http://schemas.grexx.net/atalanta/connect');
            this.phone2 = (phone2Node == null) ? null : Integer.valueOf(phone2Node.getText());
            nodesParsed.add(phone2Node);
            //System.debug(this.phone2);            
            DOM.XmlNode faxNode = responseNode.getChildElement('fax', 'http://schemas.grexx.net/atalanta/connect');
            this.fax = (faxNode == null) ? null : Integer.valueOf(faxNode.getText());
            nodesParsed.add(faxNode);
            //System.debug(this.fax);           
            DOM.XmlNode emailNode = responseNode.getChildElement('email', 'http://schemas.grexx.net/atalanta/connect');
            this.email = (emailNode == null) ? null : emailNode.getText();
            nodesParsed.add(emailNode);
            //System.debug(this.email);         
            DOM.XmlNode websiteNode = responseNode.getChildElement('website', 'http://schemas.grexx.net/atalanta/connect');
            this.website = (websiteNode == null) ? null : websiteNode.getText();
            nodesParsed.add(websiteNode);
            //System.debug(this.website);           
            DOM.XmlNode debitnrNode = responseNode.getChildElement('debitnr', 'http://schemas.grexx.net/atalanta/connect');
            this.debitnr = (debitnrNode == null) ? null : debitnrNode.getText();
            nodesParsed.add(debitnrNode);
            //System.debug(this.debitnr);           
            DOM.XmlNode legalstatusNode = responseNode.getChildElement('legalstatus', 'http://schemas.grexx.net/atalanta/connect');
            this.legalstatus = (legalstatusNode == null) ? null : legalstatusNode.getText();
            nodesParsed.add(legalstatusNode);
            //System.debug(this.legalstatus);           
            DOM.XmlNode contactnameNode = responseNode.getChildElement('contactname', 'http://schemas.grexx.net/atalanta/connect');
            this.contactname = (contactnameNode == null) ? null : contactnameNode.getText();
            nodesParsed.add(contactnameNode);
            //System.debug(this.contactname);                
                   
            DOM.XmlNode contactphoneNode = responseNode.getChildElement('contactphone', 'http://schemas.grexx.net/atalanta/connect');
            this.contactphone = (contactphoneNode == null) ? null : contactphoneNode.getText(); //Integer.valueOf(contactphoneNode.getText());
            nodesParsed.add(contactphoneNode);
            //System.debug(this.contactphone);          
            DOM.XmlNode externalidNode = responseNode.getChildElement('externalid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalid = (externalidNode == null) ? null : externalidNode.getText();
            nodesParsed.add(externalidNode);
            //System.debug(this.externalid);            
            DOM.XmlNode chamberofcommercenrNode = responseNode.getChildElement('chamberofcommercenr', 'http://schemas.grexx.net/atalanta/connect');
            this.chamberofcommercenr = (chamberofcommercenrNode == null) ? null : chamberofcommercenrNode.getText();
            nodesParsed.add(chamberofcommercenrNode);
            //System.debug(this.chamberofcommercenr);           
            DOM.XmlNode ibanNode = responseNode.getChildElement('iban', 'http://schemas.grexx.net/atalanta/connect');
            this.iban = (ibanNode == null) ? null : ibanNode.getText();
            nodesParsed.add(ibanNode);
            //System.debug(this.iban);          
            DOM.XmlNode bicNode = responseNode.getChildElement('bic', 'http://schemas.grexx.net/atalanta/connect');
            this.bic = (bicNode == null) ? null : bicNode.getText();
            nodesParsed.add(bicNode);
            //System.debug(this.bic);           
            DOM.XmlNode vatnrNode = responseNode.getChildElement('vatnr', 'http://schemas.grexx.net/atalanta/connect');
            this.vatnr = (vatnrNode == null) ? null : vatnrNode.getText();
            nodesParsed.add(vatnrNode);
            //System.debug(this.vatnr);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode newcustomerNode = outerNode.addChildElement('newcustomer', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.newcustomer != null) {
                newcustomerNode.addTextNode(String.valueOf(this.newcustomer));
            }
            if (this.irmaklantid != null) {
                Dom.XmlNode irmaklantidNode = outerNode.addChildElement('irmaklantid', 'http://schemas.grexx.net/atalanta/connect', '');
                irmaklantidNode.addTextNode((this.irmaklantid == null) ? '' : this.irmaklantid);
            }
            Dom.XmlNode nameNode = outerNode.addChildElement('name', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.name != null) {
                nameNode.addTextNode(this.name);
            }
            Dom.XmlNode streetNode = outerNode.addChildElement('street', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.street != null) {
                streetNode.addTextNode(this.street);
            }
            Dom.XmlNode housenrNode = outerNode.addChildElement('housenr', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.housenr != null) {
                housenrNode.addTextNode(String.valueOf(this.housenr));
            }
            if (this.housenrext != null) {
                Dom.XmlNode housenrextNode = outerNode.addChildElement('housenrext', 'http://schemas.grexx.net/atalanta/connect', '');
                housenrextNode.addTextNode((this.housenrext == null) ? '' : this.housenrext);
            }
            Dom.XmlNode zipcodeNode = outerNode.addChildElement('zipcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.zipcode != null) {
                zipcodeNode.addTextNode(this.zipcode);
            }
            Dom.XmlNode cityNode = outerNode.addChildElement('city', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.city != null) {
                cityNode.addTextNode(this.city);
            }
            Dom.XmlNode countrycodeNode = outerNode.addChildElement('countrycode', 'http://schemas.grexx.net/atalanta/connect', '');
            countrycodeNode.addTextNode((this.countrycode == null) ? '' : this.countrycode);
            Dom.XmlNode phone1Node = outerNode.addChildElement('phone1', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.phone1 != null) {
                phone1Node.addTextNode(String.valueOf(this.phone1));
            }
            if (this.phone2 != null) {
                Dom.XmlNode phone2Node = outerNode.addChildElement('phone2', 'http://schemas.grexx.net/atalanta/connect', '');
                phone2Node.addTextNode((this.phone2 == null) ? '' : String.valueOf(this.phone2));
            }
            if (this.fax != null) {
                Dom.XmlNode faxNode = outerNode.addChildElement('fax', 'http://schemas.grexx.net/atalanta/connect', '');
                faxNode.addTextNode((this.fax == null) ? '' : String.valueOf(this.fax));
            }
            Dom.XmlNode emailNode = outerNode.addChildElement('email', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.email != null) {
                emailNode.addTextNode(this.email);
            }
            if (this.website != null) {
                Dom.XmlNode websiteNode = outerNode.addChildElement('website', 'http://schemas.grexx.net/atalanta/connect', '');
                websiteNode.addTextNode((this.website == null) ? '' : this.website);
            }
            if (this.debitnr != null) {
                Dom.XmlNode debitnrNode = outerNode.addChildElement('debitnr', 'http://schemas.grexx.net/atalanta/connect', '');
                debitnrNode.addTextNode((this.debitnr == null) ? '' : this.debitnr);
            }
            Dom.XmlNode legalstatusNode = outerNode.addChildElement('legalstatus', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.legalstatus != null) {
                legalstatusNode.addTextNode(this.legalstatus);
            }
            Dom.XmlNode contactnameNode = outerNode.addChildElement('contactname', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.contactname != null) {
                contactnameNode.addTextNode(this.contactname);
            }
                        
            Dom.XmlNode contactphoneNode = outerNode.addChildElement('contactphone', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.contactphone != null) {
                contactphoneNode.addTextNode(String.valueOf(this.contactphone));
            }
            if (this.externalid != null) {
                Dom.XmlNode externalidNode = outerNode.addChildElement('externalid', 'http://schemas.grexx.net/atalanta/connect', '');
                externalidNode.addTextNode((this.externalid == null) ? '' : this.externalid);
            }
            if (this.chamberofcommercenr != null) {
                Dom.XmlNode chamberofcommercenrNode = outerNode.addChildElement('chamberofcommercenr', 'http://schemas.grexx.net/atalanta/connect', '');
                chamberofcommercenrNode.addTextNode((this.chamberofcommercenr == null) ? '' : this.chamberofcommercenr);
            }
            if (this.iban != null) {
                Dom.XmlNode ibanNode = outerNode.addChildElement('iban', 'http://schemas.grexx.net/atalanta/connect', '');
                ibanNode.addTextNode((this.iban == null) ? '' : this.iban);
            }
            if (this.bic != null) {
                Dom.XmlNode bicNode = outerNode.addChildElement('bic', 'http://schemas.grexx.net/atalanta/connect', '');
                bicNode.addTextNode((this.bic == null) ? '' : this.bic);
            }
            if (this.vatnr != null) {
                Dom.XmlNode vatnrNode = outerNode.addChildElement('vatnr', 'http://schemas.grexx.net/atalanta/connect', '');
                vatnrNode.addTextNode((this.vatnr == null) ? '' : this.vatnr);
            }
        }
    }
    public class order_data_element {
        public String externalid;
        public Date orderwishdate;
        public Boolean directorder;
        private String[] externalid_type_info = new String[] { 'externalid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] orderwishdate_type_info = new String[] { 'orderwishdate', 'http://schemas.grexx.net/atalanta/connect', 'date', '1', '1', 'false' };
        private String[] directorder_type_info = new String[] { 'directorder', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'externalid', 'orderwishdate', 'directorder' };
        public order_data_element() {
        }
        public order_data_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode externalidNode = responseNode.getChildElement('externalid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalid = (externalidNode == null) ? null : externalidNode.getText();
            nodesParsed.add(externalidNode);
            //System.debug(this.externalid);            
            DOM.XmlNode orderwishdateNode = responseNode.getChildElement('orderwishdate', 'http://schemas.grexx.net/atalanta/connect');
            this.orderwishdate = (orderwishdateNode == null) ? null : Date.valueOf(orderwishdateNode.getText());
            nodesParsed.add(orderwishdateNode);
            //System.debug(this.orderwishdate);         
            DOM.XmlNode directorderNode = responseNode.getChildElement('directorder', 'http://schemas.grexx.net/atalanta/connect');
            this.directorder = (directorderNode == null) ? null : Boolean.valueOf(directorderNode.getText());
            nodesParsed.add(directorderNode);
            //System.debug(this.directorder);           
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode externalidNode = outerNode.addChildElement('externalid', 'http://schemas.grexx.net/atalanta/connect', '');
            externalidNode.addTextNode((this.externalid == null) ? '' : this.externalid);
            Dom.XmlNode orderwishdateNode = outerNode.addChildElement('orderwishdate', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.orderwishdate != null) {
                orderwishdateNode.addTextNode(String.valueOf(this.orderwishdate));
            }
            Dom.XmlNode directorderNode = outerNode.addChildElement('directorder', 'http://schemas.grexx.net/atalanta/connect', '');
            directorderNode.addTextNode((this.directorder == null) ? '' : String.valueOf(this.directorder));
        }
    }
    public class order_element {
        public WSGrexxOrderControl.order_data_element data;
        public WSGrexxOrderControl.order_client_element client;
        public WSGrexxOrderControl.order_access_element access;
        public WSGrexxOrderControl.order_grouporder_element grouporder;
        public WSGrexxOrderControl.order_mobilephonenumbers_element mobilephonenumbers;
        public WSGrexxOrderControl.order_hardware_element hardware;
        public WSGrexxOrderControl.order_services_element services;
        public WSGrexxOrderControl.order_other_element other;
        private String[] data_type_info = new String[] { 'data', 'http://schemas.grexx.net/atalanta/connect', '', '1', '1', 'false' };
        private String[] client_type_info = new String[] { 'client', 'http://schemas.grexx.net/atalanta/connect', '', '1', '1', 'false' };
        private String[] access_type_info = new String[] { 'access', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] grouporder_type_info = new String[] { 'grouporder', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] mobilephonenumbers_type_info = new String[] { 'mobilephonenumbers', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] hardware_type_info = new String[] { 'hardware', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] services_type_info = new String[] { 'services', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] other_type_info = new String[] { 'other', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'data', 'client', 'access', 'grouporder', 'mobilephonenumbers', 'hardware', 'services', 'other' };
        public order_element() {
        }
        public order_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode dataNode = responseNode.getChildElement('data', 'http://schemas.grexx.net/atalanta/connect');
            if (dataNode == null) {
                this.data = null;
            } else {
                WSGrexxOrderControl.order_data_element dataObj = new WSGrexxOrderControl.order_data_element(dataNode);
                nodesParsed.add(dataNode);
                this.data = dataObj;
            }
            //System.debug(this.data);          
            DOM.XmlNode clientNode = responseNode.getChildElement('client', 'http://schemas.grexx.net/atalanta/connect');
            if (clientNode == null) {
                this.client = null;
            } else {
                WSGrexxOrderControl.order_client_element clientObj = new WSGrexxOrderControl.order_client_element(clientNode);
                nodesParsed.add(clientNode);
                this.client = clientObj;
            }
            //System.debug(this.client);            
            DOM.XmlNode accessNode = responseNode.getChildElement('access', 'http://schemas.grexx.net/atalanta/connect');
            if (accessNode == null) {
                this.access = null;
            } else {
                WSGrexxOrderControl.order_access_element accessObj = new WSGrexxOrderControl.order_access_element(accessNode);
                nodesParsed.add(accessNode);
                this.access = accessObj;
            }
            //System.debug(this.access);            
            DOM.XmlNode grouporderNode = responseNode.getChildElement('grouporder', 'http://schemas.grexx.net/atalanta/connect');
            if (grouporderNode == null) {
                this.grouporder = null;
            } else {
                WSGrexxOrderControl.order_grouporder_element grouporderObj = new WSGrexxOrderControl.order_grouporder_element(grouporderNode);
                nodesParsed.add(grouporderNode);
                this.grouporder = grouporderObj;
            }
            //System.debug(this.grouporder);            
            DOM.XmlNode mobilephonenumbersNode = responseNode.getChildElement('mobilephonenumbers', 'http://schemas.grexx.net/atalanta/connect');
            if (mobilephonenumbersNode == null) {
                this.mobilephonenumbers = null;
            } else {
                WSGrexxOrderControl.order_mobilephonenumbers_element mobilephonenumbersObj = new WSGrexxOrderControl.order_mobilephonenumbers_element(mobilephonenumbersNode);
                nodesParsed.add(mobilephonenumbersNode);
                this.mobilephonenumbers = mobilephonenumbersObj;
            }
            //System.debug(this.mobilephonenumbers);            
            DOM.XmlNode hardwareNode = responseNode.getChildElement('hardware', 'http://schemas.grexx.net/atalanta/connect');
            if (hardwareNode == null) {
                this.hardware = null;
            } else {
                WSGrexxOrderControl.order_hardware_element hardwareObj = new WSGrexxOrderControl.order_hardware_element(hardwareNode);
                nodesParsed.add(hardwareNode);
                this.hardware = hardwareObj;
            }
            //System.debug(this.hardware);          
            DOM.XmlNode servicesNode = responseNode.getChildElement('services', 'http://schemas.grexx.net/atalanta/connect');
            if (servicesNode == null) {
                this.services = null;
            } else {
                WSGrexxOrderControl.order_services_element servicesObj = new WSGrexxOrderControl.order_services_element(servicesNode);
                nodesParsed.add(servicesNode);
                this.services = servicesObj;
            }
            //System.debug(this.services);          
            DOM.XmlNode otherNode = responseNode.getChildElement('other', 'http://schemas.grexx.net/atalanta/connect');
            if (otherNode == null) {
                this.other = null;
            } else {
                WSGrexxOrderControl.order_other_element otherObj = new WSGrexxOrderControl.order_other_element(otherNode);
                nodesParsed.add(otherNode);
                this.other = otherObj;
            }
            //System.debug(this.other);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_data_element dataObj = this.data;
            Dom.XmlNode dataNode = outerNode.addChildElement('data', 'http://schemas.grexx.net/atalanta/connect', '');
            if (dataObj != null) {
                dataObj.populateXmlNode(dataNode);
            }

            WSGrexxOrderControl.order_client_element clientObj = this.client;
            Dom.XmlNode clientNode = outerNode.addChildElement('client', 'http://schemas.grexx.net/atalanta/connect', '');
            if (clientObj != null) {
                clientObj.populateXmlNode(clientNode);
            }

            WSGrexxOrderControl.order_access_element accessObj = this.access;
            //Dom.XmlNode accessNode = outerNode.addChildElement('access', 'http://schemas.grexx.net/atalanta/connect', '');
            if (accessObj != null) {
                //accessObj.populateXmlNode(accessNode);
            }

            WSGrexxOrderControl.order_grouporder_element grouporderObj = this.grouporder;
            system.debug('@@@@ this.grouporder ' + this.grouporder);
            system.debug('@@@@ grouporderObj  ' + grouporderObj );            
            //Dom.XmlNode grouporderNode = outerNode.addChildElement('grouporder', 'http://schemas.grexx.net/atalanta/connect', '');
            if(this.grouporder != null){
                Dom.XmlNode grouporderNode = outerNode.addChildElement('grouporder', 'http://schemas.grexx.net/atalanta/connect', '');
                if (grouporderObj != null) {
                    grouporderObj.populateXmlNode(grouporderNode);
                }
            }

            WSGrexxOrderControl.order_mobilephonenumbers_element mobilephonenumbersObj = this.mobilephonenumbers;
            if(this.mobilephonenumbers != null){
                Dom.XmlNode mobilephonenumbersNode = outerNode.addChildElement('mobilephonenumbers', 'http://schemas.grexx.net/atalanta/connect', '');
                if (mobilephonenumbersObj != null) {
                    mobilephonenumbersObj.populateXmlNode(mobilephonenumbersNode);
                }
            }

            WSGrexxOrderControl.order_hardware_element hardwareObj = this.hardware;
            //Dom.XmlNode hardwareNode = outerNode.addChildElement('hardware', 'http://schemas.grexx.net/atalanta/connect', '');
            if (hardwareObj != null) {
                //hardwareObj.populateXmlNode(hardwareNode);
            }

            WSGrexxOrderControl.order_services_element servicesObj = this.services;
            //Dom.XmlNode servicesNode = outerNode.addChildElement('services', 'http://schemas.grexx.net/atalanta/connect', '');
            if (servicesObj != null) {
                //servicesObj.populateXmlNode(servicesNode);
            }

            WSGrexxOrderControl.order_other_element otherObj = this.other;
            //Dom.XmlNode otherNode = outerNode.addChildElement('other', 'http://schemas.grexx.net/atalanta/connect', '');
            if (otherObj != null) {
                //otherObj.populateXmlNode(otherNode);
            }
        }
    }
    public class order_grouporder_element {
        public String productcode;
        public String domain;
        public String groupid;
        public Boolean unlimitedenabled;
        public Boolean desktopenabled;
        public String ipvpnorderid;
        public String orderId;
        public WSGrexxOrderControl.order_grouporder_options_element options;
        public WSGrexxOrderControl.order_grouporder_expressofficeuser_element expressofficeuser;
        public WSGrexxOrderControl.order_grouporder_kpneenuser_element kpneenuser;
        public WSGrexxOrderControl.order_grouporder_kpneenv2user_element kpneenv2user;
        public WSGrexxOrderControl.order_grouporder_fixedphonenumbers_element fixedphonenumbers;
        public String externalproductid;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] domain_type_info = new String[] { 'domain', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] groupid_type_info = new String[] { 'groupid', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] unlimitedenabled_type_info = new String[] { 'unlimitedenabled', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] desktopenabled_type_info = new String[] { 'desktopenabled', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] ipvpnorderid_type_info = new String[] { 'ipvpnorderid', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] orderid_type_info = new String[] { 'orderid', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] options_type_info = new String[] { 'options', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] expressofficeuser_type_info = new String[] { 'expressofficeuser', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] kpneenuser_type_info = new String[] { 'kpneenuser', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] kpneenv2user_type_info = new String[] { 'kpneenv2user', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] fixedphonenumbers_type_info = new String[] { 'fixedphonenumbers', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] externalproductid_type_info = new String[] { 'externalproductid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode','orderId', 'domain', 'groupid', 'unlimitedenabled', 'desktopenabled', 'ipvpnorderid', 'options', 'expressofficeuser', 'kpneenuser', 'kpneenv2user', 'fixedphonenumbers', 'externalproductid' };
        public order_grouporder_element() {
        }
        public order_grouporder_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode); 
            DOM.XmlNode orderidNode = responseNode.getChildElement('orderid', 'http://schemas.grexx.net/atalanta/connect');
            this.orderid = (orderidNode == null) ? null : orderidNode.getText();
            nodesParsed.add(orderidNode);
            //System.debug(this.orderidNode);            
            DOM.XmlNode domainNode = responseNode.getChildElement('domain', 'http://schemas.grexx.net/atalanta/connect');
            this.domain = (domainNode == null) ? null : domainNode.getText();
            nodesParsed.add(domainNode);
            //System.debug(this.domain);            
            DOM.XmlNode groupidNode = responseNode.getChildElement('groupid', 'http://schemas.grexx.net/atalanta/connect');
            this.groupid = (groupidNode == null) ? null : groupidNode.getText();
            nodesParsed.add(groupidNode);
            //System.debug(this.groupid);           
            DOM.XmlNode unlimitedenabledNode = responseNode.getChildElement('unlimitedenabled', 'http://schemas.grexx.net/atalanta/connect');
            this.unlimitedenabled = (unlimitedenabledNode == null) ? null : Boolean.valueOf(unlimitedenabledNode.getText());
            nodesParsed.add(unlimitedenabledNode);
            //System.debug(this.unlimitedenabled);          
            DOM.XmlNode desktopenabledNode = responseNode.getChildElement('desktopenabled', 'http://schemas.grexx.net/atalanta/connect');
            this.desktopenabled = (desktopenabledNode == null) ? null : Boolean.valueOf(desktopenabledNode.getText());
            nodesParsed.add(desktopenabledNode);
            //System.debug(this.desktopenabled);            
            DOM.XmlNode ipvpnorderidNode = responseNode.getChildElement('ipvpnorderid', 'http://schemas.grexx.net/atalanta/connect');
            this.ipvpnorderid = (ipvpnorderidNode == null) ? null : ipvpnorderidNode.getText();
            nodesParsed.add(ipvpnorderidNode);
            //System.debug(this.ipvpnorderid);          
            DOM.XmlNode optionsNode = responseNode.getChildElement('options', 'http://schemas.grexx.net/atalanta/connect');
            if (optionsNode == null) {
                this.options = null;
            } else {
                WSGrexxOrderControl.order_grouporder_options_element optionsObj = new WSGrexxOrderControl.order_grouporder_options_element(optionsNode);
                nodesParsed.add(optionsNode);
                this.options = optionsObj;
            }
            //System.debug(this.options);           
            DOM.XmlNode expressofficeuserNode = responseNode.getChildElement('expressofficeuser', 'http://schemas.grexx.net/atalanta/connect');
            if (expressofficeuserNode == null) {
                this.expressofficeuser = null;
            } else {
                WSGrexxOrderControl.order_grouporder_expressofficeuser_element expressofficeuserObj = new WSGrexxOrderControl.order_grouporder_expressofficeuser_element(expressofficeuserNode);
                nodesParsed.add(expressofficeuserNode);
                this.expressofficeuser = expressofficeuserObj;
            }
            //System.debug(this.expressofficeuser);         
            DOM.XmlNode kpneenuserNode = responseNode.getChildElement('kpneenuser', 'http://schemas.grexx.net/atalanta/connect');
            if (kpneenuserNode == null) {
                this.kpneenuser = null;
            } else {
                WSGrexxOrderControl.order_grouporder_kpneenuser_element kpneenuserObj = new WSGrexxOrderControl.order_grouporder_kpneenuser_element(kpneenuserNode);
                nodesParsed.add(kpneenuserNode);
                this.kpneenuser = kpneenuserObj;
            }
            //System.debug(this.kpneenuser);            
            DOM.XmlNode kpneenv2userNode = responseNode.getChildElement('kpneenv2user', 'http://schemas.grexx.net/atalanta/connect');
            if (kpneenv2userNode == null) {
                this.kpneenv2user = null;
            } else {
                WSGrexxOrderControl.order_grouporder_kpneenv2user_element kpneenv2userObj = new WSGrexxOrderControl.order_grouporder_kpneenv2user_element(kpneenv2userNode);
                nodesParsed.add(kpneenv2userNode);
                this.kpneenv2user = kpneenv2userObj;
            }
            //System.debug(this.kpneenv2user);          
            DOM.XmlNode fixedphonenumbersNode = responseNode.getChildElement('fixedphonenumbers', 'http://schemas.grexx.net/atalanta/connect');
            if (fixedphonenumbersNode == null) {
                this.fixedphonenumbers = null;
            } else {
                WSGrexxOrderControl.order_grouporder_fixedphonenumbers_element fixedphonenumbersObj = new WSGrexxOrderControl.order_grouporder_fixedphonenumbers_element(fixedphonenumbersNode);
                nodesParsed.add(fixedphonenumbersNode);
                this.fixedphonenumbers = fixedphonenumbersObj;
            }
            //System.debug(this.fixedphonenumbers);         
            DOM.XmlNode externalproductidNode = responseNode.getChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalproductid = (externalproductidNode == null) ? null : externalproductidNode.getText();
            nodesParsed.add(externalproductidNode);
            //System.debug(this.externalproductid);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode orderidNode = outerNode.addChildElement('orderid', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.orderid != null) {
                orderidNode.addTextNode(this.orderid);
            }
            Dom.XmlNode domainNode = outerNode.addChildElement('domain', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.domain != null) {
                domainNode.addTextNode(this.domain);
            }
            Dom.XmlNode groupidNode = outerNode.addChildElement('groupid', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.groupid != null) {
                groupidNode.addTextNode(this.groupid);
            }
            Dom.XmlNode unlimitedenabledNode = outerNode.addChildElement('unlimitedenabled', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.unlimitedenabled != null) {
                unlimitedenabledNode.addTextNode(String.valueOf(this.unlimitedenabled));
            }
            Dom.XmlNode desktopenabledNode = outerNode.addChildElement('desktopenabled', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.desktopenabled != null) {
                desktopenabledNode.addTextNode(String.valueOf(this.desktopenabled));
            }
            Dom.XmlNode ipvpnorderidNode = outerNode.addChildElement('ipvpnorderid', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.ipvpnorderid != null) {
                ipvpnorderidNode.addTextNode(this.ipvpnorderid);
            }

            WSGrexxOrderControl.order_grouporder_options_element optionsObj = this.options;
            //Dom.XmlNode optionsNode = outerNode.addChildElement('options', 'http://schemas.grexx.net/atalanta/connect', '');
            if (optionsObj != null) {
                //optionsObj.populateXmlNode(optionsNode);
            }

            WSGrexxOrderControl.order_grouporder_expressofficeuser_element expressofficeuserObj = this.expressofficeuser;
            //Dom.XmlNode expressofficeuserNode = outerNode.addChildElement('expressofficeuser', 'http://schemas.grexx.net/atalanta/connect', '');
            if (expressofficeuserObj != null) {
                //expressofficeuserObj.populateXmlNode(expressofficeuserNode);
            }

            WSGrexxOrderControl.order_grouporder_kpneenuser_element kpneenuserObj = this.kpneenuser;
            //Dom.XmlNode kpneenuserNode = outerNode.addChildElement('kpneenuser', 'http://schemas.grexx.net/atalanta/connect', '');
            if (kpneenuserObj != null) {
                //kpneenuserObj.populateXmlNode(kpneenuserNode);
            }

            WSGrexxOrderControl.order_grouporder_kpneenv2user_element kpneenv2userObj = this.kpneenv2user;
            Dom.XmlNode kpneenv2userNode = outerNode.addChildElement('kpneenv2user', 'http://schemas.grexx.net/atalanta/connect', '');
            if (kpneenv2userObj != null) {
                kpneenv2userObj.populateXmlNode(kpneenv2userNode);
            }

            WSGrexxOrderControl.order_grouporder_fixedphonenumbers_element fixedphonenumbersObj = this.fixedphonenumbers;
            //Dom.XmlNode fixedphonenumbersNode = outerNode.addChildElement('fixedphonenumbers', 'http://schemas.grexx.net/atalanta/connect', '');
            if (fixedphonenumbersObj != null) {
               // fixedphonenumbersObj.populateXmlNode(fixedphonenumbersNode);
            }
            Dom.XmlNode externalproductidNode = outerNode.addChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect', '');
            externalproductidNode.addTextNode((this.externalproductid == null) ? '' : this.externalproductid);
        }
    }
    public class order_grouporder_expressofficeuser_element {
        public WSGrexxOrderControl.order_grouporder_expressofficeuser_user_element[] user_x;
        private String[] user_x_type_info = new String[] { 'user', 'http://schemas.grexx.net/atalanta/connect', '', '1', '-1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'user_x' };
        public order_grouporder_expressofficeuser_element() {
        }
        public order_grouporder_expressofficeuser_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            Dom.XmlNode[] user_xChildren = responseNode.getChildElements();
            WSGrexxOrderControl.order_grouporder_expressofficeuser_user_element[] user_xList = new List<WSGrexxOrderControl.order_grouporder_expressofficeuser_user_element> ();
            if (user_xChildren == null || user_xChildren.size() == 0) {
                this.user_x = null;
            } else {
                for (DOM.XmlNode childNode : user_xChildren) {
                    if (childNode.GetName() == 'user_x') {
                        WSGrexxOrderControl.order_grouporder_expressofficeuser_user_element Obj = new WSGrexxOrderControl.order_grouporder_expressofficeuser_user_element(childNode);
                        user_xList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.user_x = user_xList;
            }
            //System.debug(this.user_x);            
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_grouporder_expressofficeuser_user_element[] user_xObj = this.user_x;
            if (user_xObj != null) {
                for (WSGrexxOrderControl.order_grouporder_expressofficeuser_user_element element : user_xObj) {
                    Dom.XmlNode user_xNode = outerNode.addChildElement('user', 'http://schemas.grexx.net/atalanta/connect', '');
                    element.populateXmlNode(user_xNode);
                }
            }
        }
    }
    public class order_grouporder_expressofficeuser_user_element {
        public String productcode;
        public String broadsoftusername;
        public WSGrexxOrderControl.order_grouporder_expressofficeuser_user_vamo_element vamo;
        public String externalproductid;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] broadsoftusername_type_info = new String[] { 'broadsoftusername', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] vamo_type_info = new String[] { 'vamo', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] externalproductid_type_info = new String[] { 'externalproductid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'broadsoftusername', 'vamo', 'externalproductid' };
        public order_grouporder_expressofficeuser_user_element() {
        }
        public order_grouporder_expressofficeuser_user_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode broadsoftusernameNode = responseNode.getChildElement('broadsoftusername', 'http://schemas.grexx.net/atalanta/connect');
            this.broadsoftusername = (broadsoftusernameNode == null) ? null : broadsoftusernameNode.getText();
            nodesParsed.add(broadsoftusernameNode);
            //System.debug(this.broadsoftusername);         
            DOM.XmlNode vamoNode = responseNode.getChildElement('vamo', 'http://schemas.grexx.net/atalanta/connect');
            if (vamoNode == null) {
                this.vamo = null;
            } else {
                WSGrexxOrderControl.order_grouporder_expressofficeuser_user_vamo_element vamoObj = new WSGrexxOrderControl.order_grouporder_expressofficeuser_user_vamo_element(vamoNode);
                nodesParsed.add(vamoNode);
                this.vamo = vamoObj;
            }
            //System.debug(this.vamo);          
            DOM.XmlNode externalproductidNode = responseNode.getChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalproductid = (externalproductidNode == null) ? null : externalproductidNode.getText();
            nodesParsed.add(externalproductidNode);
            //System.debug(this.externalproductid);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode broadsoftusernameNode = outerNode.addChildElement('broadsoftusername', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.broadsoftusername != null) {
                broadsoftusernameNode.addTextNode(this.broadsoftusername);
            }

            WSGrexxOrderControl.order_grouporder_expressofficeuser_user_vamo_element vamoObj = this.vamo;
            Dom.XmlNode vamoNode = outerNode.addChildElement('vamo', 'http://schemas.grexx.net/atalanta/connect', '');
            if (vamoObj != null) {
                vamoObj.populateXmlNode(vamoNode);
            }
            Dom.XmlNode externalproductidNode = outerNode.addChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect', '');
            externalproductidNode.addTextNode((this.externalproductid == null) ? '' : this.externalproductid);
        }
    }
    public class order_grouporder_expressofficeuser_user_vamo_element {
        public String productcode;
        public String phonenumber;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] phonenumber_type_info = new String[] { 'phonenumber', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'phonenumber' };
        public order_grouporder_expressofficeuser_user_vamo_element() {
        }
        public order_grouporder_expressofficeuser_user_vamo_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode phonenumberNode = responseNode.getChildElement('phonenumber', 'http://schemas.grexx.net/atalanta/connect');
            this.phonenumber = (phonenumberNode == null) ? null : phonenumberNode.getText();
            nodesParsed.add(phonenumberNode);
            //System.debug(this.phonenumber);           
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode phonenumberNode = outerNode.addChildElement('phonenumber', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.phonenumber != null) {
                phonenumberNode.addTextNode(this.phonenumber);
            }
        }
    }
    public class order_grouporder_fixedphonenumbers_element {
        public WSGrexxOrderControl.order_grouporder_fixedphonenumbers_fixedphonenumber_element[] fixedphonenumber;
        private String[] fixedphonenumber_type_info = new String[] { 'fixedphonenumber', 'http://schemas.grexx.net/atalanta/connect', '', '1', '-1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'fixedphonenumber' };
        public order_grouporder_fixedphonenumbers_element() {
        }
        public order_grouporder_fixedphonenumbers_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            Dom.XmlNode[] fixedphonenumberChildren = responseNode.getChildElements();
            WSGrexxOrderControl.order_grouporder_fixedphonenumbers_fixedphonenumber_element[] fixedphonenumberList = new List<WSGrexxOrderControl.order_grouporder_fixedphonenumbers_fixedphonenumber_element> ();
            if (fixedphonenumberChildren == null || fixedphonenumberChildren.size() == 0) {
                this.fixedphonenumber = null;
            } else {
                for (DOM.XmlNode childNode : fixedphonenumberChildren) {
                    if (childNode.GetName() == 'fixedphonenumber') {
                        WSGrexxOrderControl.order_grouporder_fixedphonenumbers_fixedphonenumber_element Obj = new WSGrexxOrderControl.order_grouporder_fixedphonenumbers_fixedphonenumber_element(childNode);
                        fixedphonenumberList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.fixedphonenumber = fixedphonenumberList;
            }
            //System.debug(this.fixedphonenumber);          
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_grouporder_fixedphonenumbers_fixedphonenumber_element[] fixedphonenumberObj = this.fixedphonenumber;
            if (fixedphonenumberObj != null) {
                for (WSGrexxOrderControl.order_grouporder_fixedphonenumbers_fixedphonenumber_element element : fixedphonenumberObj) {
                    Dom.XmlNode fixedphonenumberNode = outerNode.addChildElement('fixedphonenumber', 'http://schemas.grexx.net/atalanta/connect', '');
                    element.populateXmlNode(fixedphonenumberNode);
                }
            }
        }
    }
    public class order_grouporder_fixedphonenumbers_fixedphonenumber_element {
        public String productcode;
        public Integer phonenumber;
        public Boolean listedinphonebook;
        public String portingwishdate;
        public Boolean flexibleporting;
        public String firstname;
        public String middlename;
        public String lastname;
        public String street;
        public String housenr;
        public String housenrext;
        public String zipcode;
        public String city;
        public String externalproductid;
        public Date contractterminationdate;
        public String contractterminationduration;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] phonenumber_type_info = new String[] { 'phonenumber', 'http://schemas.grexx.net/atalanta/connect', 'int', '0', '1', 'false' };
        private String[] listedinphonebook_type_info = new String[] { 'listedinphonebook', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] portingwishdate_type_info = new String[] { 'portingwishdate', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] flexibleporting_type_info = new String[] { 'flexibleporting', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '0', '1', 'false' };
        private String[] firstname_type_info = new String[] { 'firstname', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] middlename_type_info = new String[] { 'middlename', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] lastname_type_info = new String[] { 'lastname', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] street_type_info = new String[] { 'street', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] housenr_type_info = new String[] { 'housenr', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] housenrext_type_info = new String[] { 'housenrext', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] zipcode_type_info = new String[] { 'zipcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] city_type_info = new String[] { 'city', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] externalproductid_type_info = new String[] { 'externalproductid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] contractterminationdate_type_info = new String[]{'contractterminationdate','http://schemas.grexx.net/atalanta/connect',null,'0','1','false'};
        private String[] contractterminationduration_type_info = new String[]{'contractterminationduration','http://schemas.grexx.net/atalanta/connect',null,'0','1','true'};
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'phonenumber', 'listedinphonebook', 'portingwishdate', 'flexibleporting', 'firstname', 'middlename', 'lastname', 'street', 'housenr', 'housenrext', 'zipcode', 'city', 'externalproductid', 'contractterminationdate', 'contractterminationduration' };
        public order_grouporder_fixedphonenumbers_fixedphonenumber_element() {
        }
        public order_grouporder_fixedphonenumbers_fixedphonenumber_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode phonenumberNode = responseNode.getChildElement('phonenumber', 'http://schemas.grexx.net/atalanta/connect');
            this.phonenumber = (phonenumberNode == null) ? null : Integer.valueOf(phonenumberNode.getText());
            nodesParsed.add(phonenumberNode);
            //System.debug(this.phonenumber);           
            DOM.XmlNode listedinphonebookNode = responseNode.getChildElement('listedinphonebook', 'http://schemas.grexx.net/atalanta/connect');
            this.listedinphonebook = (listedinphonebookNode == null) ? null : Boolean.valueOf(listedinphonebookNode.getText());
            nodesParsed.add(listedinphonebookNode);
            //System.debug(this.listedinphonebook);         
            DOM.XmlNode portingwishdateNode = responseNode.getChildElement('portingwishdate', 'http://schemas.grexx.net/atalanta/connect');
            this.portingwishdate = (portingwishdateNode == null) ? null : portingwishdateNode.getText();
            nodesParsed.add(portingwishdateNode);
            //System.debug(this.portingwishdate);           
            DOM.XmlNode flexibleportingNode = responseNode.getChildElement('flexibleporting', 'http://schemas.grexx.net/atalanta/connect');
            this.flexibleporting = (flexibleportingNode == null) ? null : Boolean.valueOf(flexibleportingNode.getText());
            nodesParsed.add(flexibleportingNode);
            //System.debug(this.flexibleporting);           
            DOM.XmlNode firstnameNode = responseNode.getChildElement('firstname', 'http://schemas.grexx.net/atalanta/connect');
            this.firstname = (firstnameNode == null) ? null : firstnameNode.getText();
            nodesParsed.add(firstnameNode);
            //System.debug(this.firstname);         
            DOM.XmlNode middlenameNode = responseNode.getChildElement('middlename', 'http://schemas.grexx.net/atalanta/connect');
            this.middlename = (middlenameNode == null) ? null : middlenameNode.getText();
            nodesParsed.add(middlenameNode);
            //System.debug(this.middlename);            
            DOM.XmlNode lastnameNode = responseNode.getChildElement('lastname', 'http://schemas.grexx.net/atalanta/connect');
            this.lastname = (lastnameNode == null) ? null : lastnameNode.getText();
            nodesParsed.add(lastnameNode);
            //System.debug(this.lastname);          
            DOM.XmlNode streetNode = responseNode.getChildElement('street', 'http://schemas.grexx.net/atalanta/connect');
            this.street = (streetNode == null) ? null : streetNode.getText();
            nodesParsed.add(streetNode);
            //System.debug(this.street);            
            DOM.XmlNode housenrNode = responseNode.getChildElement('housenr', 'http://schemas.grexx.net/atalanta/connect');
            this.housenr = (housenrNode == null) ? null : housenrNode.getText();
            nodesParsed.add(housenrNode);
            //System.debug(this.housenr);           
            DOM.XmlNode housenrextNode = responseNode.getChildElement('housenrext', 'http://schemas.grexx.net/atalanta/connect');
            this.housenrext = (housenrextNode == null) ? null : housenrextNode.getText();
            nodesParsed.add(housenrextNode);
            //System.debug(this.housenrext);            
            DOM.XmlNode zipcodeNode = responseNode.getChildElement('zipcode', 'http://schemas.grexx.net/atalanta/connect');
            this.zipcode = (zipcodeNode == null) ? null : zipcodeNode.getText();
            nodesParsed.add(zipcodeNode);
            //System.debug(this.zipcode);           
            DOM.XmlNode cityNode = responseNode.getChildElement('city', 'http://schemas.grexx.net/atalanta/connect');
            this.city = (cityNode == null) ? null : cityNode.getText();
            nodesParsed.add(cityNode);
            //System.debug(this.city);          
            DOM.XmlNode externalproductidNode = responseNode.getChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalproductid = (externalproductidNode == null) ? null : externalproductidNode.getText();
            nodesParsed.add(externalproductidNode);
            //System.debug(this.externalproductid);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode phonenumberNode = outerNode.addChildElement('phonenumber', 'http://schemas.grexx.net/atalanta/connect', '');
            phonenumberNode.addTextNode((this.phonenumber == null) ? '' : String.valueOf(this.phonenumber));
            Dom.XmlNode listedinphonebookNode = outerNode.addChildElement('listedinphonebook', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.listedinphonebook != null) {
                listedinphonebookNode.addTextNode(String.valueOf(this.listedinphonebook));
            }
            Dom.XmlNode portingwishdateNode = outerNode.addChildElement('portingwishdate', 'http://schemas.grexx.net/atalanta/connect', '');
            portingwishdateNode.addTextNode((this.portingwishdate == null) ? '' : this.portingwishdate);
            Dom.XmlNode flexibleportingNode = outerNode.addChildElement('flexibleporting', 'http://schemas.grexx.net/atalanta/connect', '');
            flexibleportingNode.addTextNode((this.flexibleporting == null) ? '' : String.valueOf(this.flexibleporting));
            Dom.XmlNode firstnameNode = outerNode.addChildElement('firstname', 'http://schemas.grexx.net/atalanta/connect', '');
            firstnameNode.addTextNode((this.firstname == null) ? '' : this.firstname);
            Dom.XmlNode middlenameNode = outerNode.addChildElement('middlename', 'http://schemas.grexx.net/atalanta/connect', '');
            middlenameNode.addTextNode((this.middlename == null) ? '' : this.middlename);
            Dom.XmlNode lastnameNode = outerNode.addChildElement('lastname', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.lastname != null) {
                lastnameNode.addTextNode(this.lastname);
            }
            Dom.XmlNode streetNode = outerNode.addChildElement('street', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.street != null) {
                streetNode.addTextNode(this.street);
            }
            Dom.XmlNode housenrNode = outerNode.addChildElement('housenr', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.housenr != null) {
                housenrNode.addTextNode(this.housenr);
            }
            if (this.housenrext != null) {
                Dom.XmlNode housenrextNode = outerNode.addChildElement('housenrext', 'http://schemas.grexx.net/atalanta/connect', '');
                housenrextNode.addTextNode((this.housenrext == null) ? '' : this.housenrext);
            }
            Dom.XmlNode zipcodeNode = outerNode.addChildElement('zipcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.zipcode != null) {
                zipcodeNode.addTextNode(this.zipcode);
            }
            Dom.XmlNode cityNode = outerNode.addChildElement('city', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.city != null) {
                cityNode.addTextNode(this.city);
            }
            Dom.XmlNode externalproductidNode = outerNode.addChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect', '');
            externalproductidNode.addTextNode((this.externalproductid == null) ? '' : this.externalproductid);
        }
    }
    public class order_grouporder_kpneenuser_element {
        public WSGrexxOrderControl.order_grouporder_kpneenuser_user_element[] user_x;
        private String[] user_x_type_info = new String[] { 'user', 'http://schemas.grexx.net/atalanta/connect', '', '1', '-1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'user_x' };
        public order_grouporder_kpneenuser_element() {
        }
        public order_grouporder_kpneenuser_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            Dom.XmlNode[] user_xChildren = responseNode.getChildElements();
            WSGrexxOrderControl.order_grouporder_kpneenuser_user_element[] user_xList = new List<WSGrexxOrderControl.order_grouporder_kpneenuser_user_element> ();
            if (user_xChildren == null || user_xChildren.size() == 0) {
                this.user_x = null;
            } else {
                for (DOM.XmlNode childNode : user_xChildren) {
                    if (childNode.GetName() == 'user_x') {
                        WSGrexxOrderControl.order_grouporder_kpneenuser_user_element Obj = new WSGrexxOrderControl.order_grouporder_kpneenuser_user_element(childNode);
                        user_xList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.user_x = user_xList;
            }
            //System.debug(this.user_x);            
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_grouporder_kpneenuser_user_element[] user_xObj = this.user_x;
            if (user_xObj != null) {
                for (WSGrexxOrderControl.order_grouporder_kpneenuser_user_element element : user_xObj) {
                    Dom.XmlNode user_xNode = outerNode.addChildElement('user', 'http://schemas.grexx.net/atalanta/connect', '');
                    element.populateXmlNode(user_xNode);
                }
            }
        }
    }
    public class order_grouporder_kpneenuser_user_element {
        public String productcode;
        public Integer amount;
        public String externalproductid;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] amount_type_info = new String[] { 'amount', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] externalproductid_type_info = new String[] { 'externalproductid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'amount', 'externalproductid' };
        public order_grouporder_kpneenuser_user_element() {
        }
        public order_grouporder_kpneenuser_user_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode amountNode = responseNode.getChildElement('amount', 'http://schemas.grexx.net/atalanta/connect');
            this.amount = (amountNode == null) ? null : Integer.valueOf(amountNode.getText());
            nodesParsed.add(amountNode);
            //System.debug(this.amount);            
            DOM.XmlNode externalproductidNode = responseNode.getChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalproductid = (externalproductidNode == null) ? null : externalproductidNode.getText();
            nodesParsed.add(externalproductidNode);
            //System.debug(this.externalproductid);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode amountNode = outerNode.addChildElement('amount', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.amount != null) {
                amountNode.addTextNode(String.valueOf(this.amount));
            }
            Dom.XmlNode externalproductidNode = outerNode.addChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect', '');
            externalproductidNode.addTextNode((this.externalproductid == null) ? '' : this.externalproductid);
        }
    }
    public class order_grouporder_kpneenv2user_element {
        public WSGrexxOrderControl.order_grouporder_kpneenv2user_user_element[] user_x;
        private String[] user_x_type_info = new String[] { 'user', 'http://schemas.grexx.net/atalanta/connect', '', '1', '-1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'user_x' };
        public order_grouporder_kpneenv2user_element() {
        }
        public order_grouporder_kpneenv2user_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            Dom.XmlNode[] user_xChildren = responseNode.getChildElements();
            WSGrexxOrderControl.order_grouporder_kpneenv2user_user_element[] user_xList = new List<WSGrexxOrderControl.order_grouporder_kpneenv2user_user_element> ();
            if (user_xChildren == null || user_xChildren.size() == 0) {
                this.user_x = null;
            } else {
                for (DOM.XmlNode childNode : user_xChildren) {
                    if (childNode.GetName() == 'user_x') {
                        WSGrexxOrderControl.order_grouporder_kpneenv2user_user_element Obj = new WSGrexxOrderControl.order_grouporder_kpneenv2user_user_element(childNode);
                        user_xList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.user_x = user_xList;
            }
            //System.debug(this.user_x);            
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_grouporder_kpneenv2user_user_element[] user_xObj = this.user_x;
            if (user_xObj != null) {
                for (WSGrexxOrderControl.order_grouporder_kpneenv2user_user_element element : user_xObj) {
                    Dom.XmlNode user_xNode = outerNode.addChildElement('user', 'http://schemas.grexx.net/atalanta/connect', '');
                    element.populateXmlNode(user_xNode);
                }
            }
        }
    }
    public class order_grouporder_kpneenv2user_user_element {
        public String productcode;
        public String username;
        public String email;
        public String vamoid;
        public String label;
        public String externalproductid;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] username_type_info = new String[] { 'username', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] email_type_info = new String[] { 'email', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] vamoid_type_info = new String[] { 'vamoid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] label_type_info = new String[] { 'label', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] externalproductid_type_info = new String[] { 'externalproductid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'username', 'email', 'vamoid', 'label', 'externalproductid' };
        public order_grouporder_kpneenv2user_user_element() {
        }
        public order_grouporder_kpneenv2user_user_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode usernameNode = responseNode.getChildElement('username', 'http://schemas.grexx.net/atalanta/connect');
            this.username = (usernameNode == null) ? null : usernameNode.getText();
            nodesParsed.add(usernameNode);
            //System.debug(this.username);          
            DOM.XmlNode emailNode = responseNode.getChildElement('email', 'http://schemas.grexx.net/atalanta/connect');
            this.email = (emailNode == null) ? null : emailNode.getText();
            nodesParsed.add(emailNode);
            //System.debug(this.email);         
            DOM.XmlNode vamoidNode = responseNode.getChildElement('vamoid', 'http://schemas.grexx.net/atalanta/connect');
            this.vamoid = (vamoidNode == null) ? null : vamoidNode.getText();
            nodesParsed.add(vamoidNode);
            //System.debug(this.vamoid);            
            DOM.XmlNode labelNode = responseNode.getChildElement('label', 'http://schemas.grexx.net/atalanta/connect');
            this.label = (labelNode == null) ? null : labelNode.getText();
            nodesParsed.add(labelNode);
            //System.debug(this.label);         
            DOM.XmlNode externalproductidNode = responseNode.getChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalproductid = (externalproductidNode == null) ? null : externalproductidNode.getText();
            nodesParsed.add(externalproductidNode);
            //System.debug(this.externalproductid);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode usernameNode = outerNode.addChildElement('username', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.username != null) {
                usernameNode.addTextNode(this.username);
            }
            Dom.XmlNode emailNode = outerNode.addChildElement('email', 'http://schemas.grexx.net/atalanta/connect', '');
            emailNode.addTextNode((this.email == null) ? '' : this.email);
            Dom.XmlNode vamoidNode = outerNode.addChildElement('vamoid', 'http://schemas.grexx.net/atalanta/connect', '');
            vamoidNode.addTextNode((this.vamoid == null) ? '' : this.vamoid);
            Dom.XmlNode labelNode = outerNode.addChildElement('label', 'http://schemas.grexx.net/atalanta/connect', '');
            labelNode.addTextNode((this.label == null) ? '' : this.label);
            Dom.XmlNode externalproductidNode = outerNode.addChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect', '');
            externalproductidNode.addTextNode((this.externalproductid == null) ? '' : this.externalproductid);
        }
    }
    public class order_grouporder_options_element {
        public WSGrexxOrderControl.order_grouporder_options_option_element[] option;
        private String[] option_type_info = new String[] { 'option', 'http://schemas.grexx.net/atalanta/connect', '', '1', '-1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'option' };
        public order_grouporder_options_element() {
        }
        public order_grouporder_options_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            Dom.XmlNode[] optionChildren = responseNode.getChildElements();
            WSGrexxOrderControl.order_grouporder_options_option_element[] optionList = new List<WSGrexxOrderControl.order_grouporder_options_option_element> ();
            if (optionChildren == null || optionChildren.size() == 0) {
                this.option = null;
            } else {
                for (DOM.XmlNode childNode : optionChildren) {
                    if (childNode.GetName() == 'option') {
                        WSGrexxOrderControl.order_grouporder_options_option_element Obj = new WSGrexxOrderControl.order_grouporder_options_option_element(childNode);
                        optionList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.option = optionList;
            }
            //System.debug(this.option);            
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_grouporder_options_option_element[] optionObj = this.option;
            if (optionObj != null) {
                for (WSGrexxOrderControl.order_grouporder_options_option_element element : optionObj) {
                    Dom.XmlNode optionNode = outerNode.addChildElement('option', 'http://schemas.grexx.net/atalanta/connect', '');
                    element.populateXmlNode(optionNode);
                }
            }
        }
    }
    public class order_grouporder_options_option_element {
        public String productcode;
        public Integer amount;
        public String label;
        public String externalproductid;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] amount_type_info = new String[] { 'amount', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] label_type_info = new String[] { 'label', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] externalproductid_type_info = new String[] { 'externalproductid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'amount', 'label', 'externalproductid' };
        public order_grouporder_options_option_element() {
        }
        public order_grouporder_options_option_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode amountNode = responseNode.getChildElement('amount', 'http://schemas.grexx.net/atalanta/connect');
            this.amount = (amountNode == null) ? null : Integer.valueOf(amountNode.getText());
            nodesParsed.add(amountNode);
            //System.debug(this.amount);            
            DOM.XmlNode labelNode = responseNode.getChildElement('label', 'http://schemas.grexx.net/atalanta/connect');
            this.label = (labelNode == null) ? null : labelNode.getText();
            nodesParsed.add(labelNode);
            //System.debug(this.label);         
            DOM.XmlNode externalproductidNode = responseNode.getChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalproductid = (externalproductidNode == null) ? null : externalproductidNode.getText();
            nodesParsed.add(externalproductidNode);
            //System.debug(this.externalproductid);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode amountNode = outerNode.addChildElement('amount', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.amount != null) {
                amountNode.addTextNode(String.valueOf(this.amount));
            }
            Dom.XmlNode labelNode = outerNode.addChildElement('label', 'http://schemas.grexx.net/atalanta/connect', '');
            labelNode.addTextNode((this.label == null) ? '' : this.label);
            Dom.XmlNode externalproductidNode = outerNode.addChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect', '');
            externalproductidNode.addTextNode((this.externalproductid == null) ? '' : this.externalproductid);
        }
    }
    public class order_hardware_element {
        public WSGrexxOrderControl.order_hardware_item_element[] item;
        private String[] item_type_info = new String[] { 'item', 'http://schemas.grexx.net/atalanta/connect', '', '1', '-1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'item' };
        public order_hardware_element() {
        }
        public order_hardware_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            Dom.XmlNode[] itemChildren = responseNode.getChildElements();
            WSGrexxOrderControl.order_hardware_item_element[] itemList = new List<WSGrexxOrderControl.order_hardware_item_element> ();
            if (itemChildren == null || itemChildren.size() == 0) {
                this.item = null;
            } else {
                for (DOM.XmlNode childNode : itemChildren) {
                    if (childNode.GetName() == 'item') {
                        WSGrexxOrderControl.order_hardware_item_element Obj = new WSGrexxOrderControl.order_hardware_item_element(childNode);
                        itemList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.item = itemList;
            }
            //System.debug(this.item);          
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_hardware_item_element[] itemObj = this.item;
            if (itemObj != null) {
                for (WSGrexxOrderControl.order_hardware_item_element element : itemObj) {
                    Dom.XmlNode itemNode = outerNode.addChildElement('item', 'http://schemas.grexx.net/atalanta/connect', '');
                    element.populateXmlNode(itemNode);
                }
            }
        }
    }
    public class order_hardware_item_element {
        public String productcode;
        public Integer amount;
        public String name;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] amount_type_info = new String[] { 'amount', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] name_type_info = new String[] { 'name', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'amount', 'name' };
        public order_hardware_item_element() {
        }
        public order_hardware_item_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode amountNode = responseNode.getChildElement('amount', 'http://schemas.grexx.net/atalanta/connect');
            this.amount = (amountNode == null) ? null : Integer.valueOf(amountNode.getText());
            nodesParsed.add(amountNode);
            //System.debug(this.amount);            
            DOM.XmlNode nameNode = responseNode.getChildElement('name', 'http://schemas.grexx.net/atalanta/connect');
            this.name = (nameNode == null) ? null : nameNode.getText();
            nodesParsed.add(nameNode);
            //System.debug(this.name);          
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode amountNode = outerNode.addChildElement('amount', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.amount != null) {
                amountNode.addTextNode(String.valueOf(this.amount));
            }
            Dom.XmlNode nameNode = outerNode.addChildElement('name', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.name != null) {
                nameNode.addTextNode(this.name);
            }
        }
    }
    public class order_mobilephonenumbers_element {
        public WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_element[] mobilephonenumber;
        private String[] mobilephonenumber_type_info = new String[] { 'mobilephonenumber', 'http://schemas.grexx.net/atalanta/connect', '', '1', '-1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'mobilephonenumber' };
        public order_mobilephonenumbers_element() {
        }
        public order_mobilephonenumbers_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            Dom.XmlNode[] mobilephonenumberChildren = responseNode.getChildElements();
            WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_element[] mobilephonenumberList = new List<WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_element> ();
            if (mobilephonenumberChildren == null || mobilephonenumberChildren.size() == 0) {
                this.mobilephonenumber = null;
            } else {
                for (DOM.XmlNode childNode : mobilephonenumberChildren) {
                    if (childNode.GetName() == 'mobilephonenumber') {
                        WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_element Obj = new WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_element(childNode);
                        mobilephonenumberList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.mobilephonenumber = mobilephonenumberList;
            }
            //System.debug(this.mobilephonenumber);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_element[] mobilephonenumberObj = this.mobilephonenumber;
            if (mobilephonenumberObj != null) {
                for (WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_element element : mobilephonenumberObj) {
                    Dom.XmlNode mobilephonenumberNode = outerNode.addChildElement('mobilephonenumber', 'http://schemas.grexx.net/atalanta/connect', '');
                    element.populateXmlNode(mobilephonenumberNode);
                }
            }
        }
    }
    public class order_mobilephonenumbers_mobilephonenumber_element {
        public String productcode;
        public String iccshort;
        public String phonenumber;
        public String donortelco;
        public String label;
        public Integer phonenumbertype;
        public String subscriptiontype;
        public Boolean listedinphonebook;
        public String wishdate;
        public Boolean blockservicenumber;
        public Boolean blockroaming;
        public Boolean blockcalltointernational;
        public Boolean blockdataroaming;
        public Boolean isprivatenumber;
        public String customernumber;
        public String customersimcardnumber;
        public String firstname;
        public String middlename;
        public String lastname;
        public String street;
        public String housenr;
        public String housenrext;
        public String zipcode;
        public String city;
        public String vamoid;
        public Date contractterminationdate;
        public String contractterminationduration;
        public WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_element modules;
        public String externalproductid;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] iccshort_type_info = new String[] { 'iccshort', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] phonenumber_type_info = new String[] { 'phonenumber', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] donortelco_type_info = new String[] { 'donortelco', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] label_type_info = new String[] { 'label', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] phonenumbertype_type_info = new String[] { 'phonenumbertype', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] subscriptiontype_type_info = new String[] { 'subscriptiontype', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] listedinphonebook_type_info = new String[] { 'listedinphonebook', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] wishdate_type_info = new String[] { 'wishdate', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] blockservicenumber_type_info = new String[] { 'blockservicenumber', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] blockroaming_type_info = new String[] { 'blockroaming', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] blockcalltointernational_type_info = new String[] { 'blockcalltointernational', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] blockdataroaming_type_info = new String[] { 'blockdataroaming', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] isprivatenumber_type_info = new String[] { 'isprivatenumber', 'http://schemas.grexx.net/atalanta/connect', 'boolean', '1', '1', 'false' };
        private String[] customernumber_type_info = new String[] { 'customernumber', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] customersimcardnumber_type_info = new String[] { 'customersimcardnumber', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] firstname_type_info = new String[] { 'firstname', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] middlename_type_info = new String[] { 'middlename', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] lastname_type_info = new String[] { 'lastname', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] street_type_info = new String[] { 'street', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] housenr_type_info = new String[] { 'housenr', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] housenrext_type_info = new String[] { 'housenrext', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] zipcode_type_info = new String[] { 'zipcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] city_type_info = new String[] { 'city', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] vamoid_type_info = new String[] { 'vamoid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] modules_type_info = new String[] { 'modules', 'http://schemas.grexx.net/atalanta/connect', '', '0', '1', 'false' };
        private String[] externalproductid_type_info = new String[] { 'externalproductid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] contractterminationdate_type_info = new String[]{'contractterminationdate','http://schemas.grexx.net/atalanta/connect',null,'0','1','false'};
        private String[] contractterminationduration_type_info = new String[]{'contractterminationduration','http://schemas.grexx.net/atalanta/connect',null,'0','1','true'};
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'iccshort', 'phonenumber', 'donortelco', 'label', 'phonenumbertype', 'subscriptiontype', 'listedinphonebook', 'wishdate', 'blockservicenumber', 'blockroaming', 'blockcalltointernational', 'blockdataroaming', 'isprivatenumber', 'customernumber', 'customersimcardnumber', 'firstname', 'middlename', 'lastname', 'street', 'housenr', 'housenrext', 'zipcode', 'city', 'vamoid', 'modules', 'externalproductid','contractterminationdate','contractterminationduration'};
        public order_mobilephonenumbers_mobilephonenumber_element() {
        }
        public order_mobilephonenumbers_mobilephonenumber_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode iccshortNode = responseNode.getChildElement('iccshort', 'http://schemas.grexx.net/atalanta/connect');
            this.iccshort = (iccshortNode == null) ? null : iccshortNode.getText();
            nodesParsed.add(iccshortNode);
            //System.debug(this.iccshort);          
            DOM.XmlNode phonenumberNode = responseNode.getChildElement('phonenumber', 'http://schemas.grexx.net/atalanta/connect');
            this.phonenumber = (phonenumberNode == null) ? null : phonenumberNode.getText();
            nodesParsed.add(phonenumberNode);
            //System.debug(this.phonenumber);           
            DOM.XmlNode donortelcoNode = responseNode.getChildElement('donortelco', 'http://schemas.grexx.net/atalanta/connect');
            this.donortelco = (donortelcoNode == null) ? null : donortelcoNode.getText();
            nodesParsed.add(donortelcoNode);
            //System.debug(this.donortelco);            
            DOM.XmlNode labelNode = responseNode.getChildElement('label', 'http://schemas.grexx.net/atalanta/connect');
            this.label = (labelNode == null) ? null : labelNode.getText();
            nodesParsed.add(labelNode);
            //System.debug(this.label);         
            DOM.XmlNode phonenumbertypeNode = responseNode.getChildElement('phonenumbertype', 'http://schemas.grexx.net/atalanta/connect');
            this.phonenumbertype = (phonenumbertypeNode == null) ? null : Integer.valueOf(phonenumbertypeNode.getText());
            nodesParsed.add(phonenumbertypeNode);
            //System.debug(this.phonenumbertype);           
            DOM.XmlNode subscriptiontypeNode = responseNode.getChildElement('subscriptiontype', 'http://schemas.grexx.net/atalanta/connect');
            this.subscriptiontype = (subscriptiontypeNode == null) ? null : subscriptiontypeNode.getText();
            nodesParsed.add(subscriptiontypeNode);
            //System.debug(this.subscriptiontype);          
            DOM.XmlNode listedinphonebookNode = responseNode.getChildElement('listedinphonebook', 'http://schemas.grexx.net/atalanta/connect');
            this.listedinphonebook = (listedinphonebookNode == null) ? null : Boolean.valueOf(listedinphonebookNode.getText());
            nodesParsed.add(listedinphonebookNode);
            //System.debug(this.listedinphonebook);         
            DOM.XmlNode wishdateNode = responseNode.getChildElement('wishdate', 'http://schemas.grexx.net/atalanta/connect');
            this.wishdate = (wishdateNode == null) ? null : wishdateNode.getText();
            nodesParsed.add(wishdateNode);
            //System.debug(this.wishdate);          
            DOM.XmlNode blockservicenumberNode = responseNode.getChildElement('blockservicenumber', 'http://schemas.grexx.net/atalanta/connect');
            this.blockservicenumber = (blockservicenumberNode == null) ? null : Boolean.valueOf(blockservicenumberNode.getText());
            nodesParsed.add(blockservicenumberNode);
            //System.debug(this.blockservicenumber);            
            DOM.XmlNode blockroamingNode = responseNode.getChildElement('blockroaming', 'http://schemas.grexx.net/atalanta/connect');
            this.blockroaming = (blockroamingNode == null) ? null : Boolean.valueOf(blockroamingNode.getText());
            nodesParsed.add(blockroamingNode);
            //System.debug(this.blockroaming);          
            DOM.XmlNode blockcalltointernationalNode = responseNode.getChildElement('blockcalltointernational', 'http://schemas.grexx.net/atalanta/connect');
            this.blockcalltointernational = (blockcalltointernationalNode == null) ? null : Boolean.valueOf(blockcalltointernationalNode.getText());
            nodesParsed.add(blockcalltointernationalNode);
            //System.debug(this.blockcalltointernational);          
            DOM.XmlNode blockdataroamingNode = responseNode.getChildElement('blockdataroaming', 'http://schemas.grexx.net/atalanta/connect');
            this.blockdataroaming = (blockdataroamingNode == null) ? null : Boolean.valueOf(blockdataroamingNode.getText());
            nodesParsed.add(blockdataroamingNode);
            //System.debug(this.blockdataroaming);          
            DOM.XmlNode isprivatenumberNode = responseNode.getChildElement('isprivatenumber', 'http://schemas.grexx.net/atalanta/connect');
            this.isprivatenumber = (isprivatenumberNode == null) ? null : Boolean.valueOf(isprivatenumberNode.getText());
            nodesParsed.add(isprivatenumberNode);
            //System.debug(this.isprivatenumber);           
            DOM.XmlNode customernumberNode = responseNode.getChildElement('customernumber', 'http://schemas.grexx.net/atalanta/connect');
            this.customernumber = (customernumberNode == null) ? null : customernumberNode.getText();
            nodesParsed.add(customernumberNode);
            //System.debug(this.customernumber);            
            DOM.XmlNode customersimcardnumberNode = responseNode.getChildElement('customersimcardnumber', 'http://schemas.grexx.net/atalanta/connect');
            this.customersimcardnumber = (customersimcardnumberNode == null) ? null : customersimcardnumberNode.getText();
            nodesParsed.add(customersimcardnumberNode);
            //System.debug(this.customersimcardnumber);         
            DOM.XmlNode firstnameNode = responseNode.getChildElement('firstname', 'http://schemas.grexx.net/atalanta/connect');
            this.firstname = (firstnameNode == null) ? null : firstnameNode.getText();
            nodesParsed.add(firstnameNode);
            //System.debug(this.firstname);         
            DOM.XmlNode middlenameNode = responseNode.getChildElement('middlename', 'http://schemas.grexx.net/atalanta/connect');
            this.middlename = (middlenameNode == null) ? null : middlenameNode.getText();
            nodesParsed.add(middlenameNode);
            //System.debug(this.middlename);            
            DOM.XmlNode lastnameNode = responseNode.getChildElement('lastname', 'http://schemas.grexx.net/atalanta/connect');
            this.lastname = (lastnameNode == null) ? null : lastnameNode.getText();
            nodesParsed.add(lastnameNode);
            //System.debug(this.lastname);          
            DOM.XmlNode streetNode = responseNode.getChildElement('street', 'http://schemas.grexx.net/atalanta/connect');
            this.street = (streetNode == null) ? null : streetNode.getText();
            nodesParsed.add(streetNode);
            //System.debug(this.street);            
            DOM.XmlNode housenrNode = responseNode.getChildElement('housenr', 'http://schemas.grexx.net/atalanta/connect');
            this.housenr = (housenrNode == null) ? null : housenrNode.getText();
            nodesParsed.add(housenrNode);
            //System.debug(this.housenr);           
            DOM.XmlNode housenrextNode = responseNode.getChildElement('housenrext', 'http://schemas.grexx.net/atalanta/connect');
            this.housenrext = (housenrextNode == null) ? null : housenrextNode.getText();
            nodesParsed.add(housenrextNode);
            //System.debug(this.housenrext);            
            DOM.XmlNode zipcodeNode = responseNode.getChildElement('zipcode', 'http://schemas.grexx.net/atalanta/connect');
            this.zipcode = (zipcodeNode == null) ? null : zipcodeNode.getText();
            nodesParsed.add(zipcodeNode);
            //System.debug(this.zipcode);           
            DOM.XmlNode cityNode = responseNode.getChildElement('city', 'http://schemas.grexx.net/atalanta/connect');
            this.city = (cityNode == null) ? null : cityNode.getText();
            nodesParsed.add(cityNode);
            //System.debug(this.city);          
            DOM.XmlNode vamoidNode = responseNode.getChildElement('vamoid', 'http://schemas.grexx.net/atalanta/connect');
            this.vamoid = (vamoidNode == null) ? null : vamoidNode.getText();
            nodesParsed.add(vamoidNode);                        
            
            //System.debug(this.vamoid);        
            DOM.XmlNode modulesNode = responseNode.getChildElement('modules', 'http://schemas.grexx.net/atalanta/connect');
            if (modulesNode == null) {
                this.modules = null;
            } else {
                WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_element modulesObj = new WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_element(modulesNode);
                nodesParsed.add(modulesNode);
                this.modules = modulesObj;
            }
            //System.debug(this.modules);           
            DOM.XmlNode externalproductidNode = responseNode.getChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalproductid = (externalproductidNode == null) ? null : externalproductidNode.getText();
            nodesParsed.add(externalproductidNode);
            //System.debug(this.externalproductid);  
            
            DOM.XmlNode contractterminationdateNode = responseNode.getChildElement('contractterminationdate', 'http://schemas.grexx.net/atalanta/connect');
            this.contractterminationdate = (contractterminationdateNode == null) ? null : Date.valueOf(contractterminationdateNode.getText());
            nodesParsed.add(contractterminationdateNode);
            
            DOM.XmlNode contractterminationdurationNode = responseNode.getChildElement('contractterminationduration', 'http://schemas.grexx.net/atalanta/connect');
            this.contractterminationduration = (contractterminationdurationNode == null) ? null : contractterminationdurationNode.getText();
            nodesParsed.add(contractterminationdurationNode);       
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            if (this.iccshort != null) {
                Dom.XmlNode iccshortNode = outerNode.addChildElement('iccshort', 'http://schemas.grexx.net/atalanta/connect', '');
                iccshortNode.addTextNode((this.iccshort == null) ? '' : this.iccshort);
            }
            if (this.phonenumber != null) {
                Dom.XmlNode phonenumberNode = outerNode.addChildElement('phonenumber', 'http://schemas.grexx.net/atalanta/connect', '');
                phonenumberNode.addTextNode((this.phonenumber == null) ? '' : this.phonenumber);
            }
            if (this.donortelco != null) {
                Dom.XmlNode donortelcoNode = outerNode.addChildElement('donortelco', 'http://schemas.grexx.net/atalanta/connect', '');
                donortelcoNode.addTextNode((this.donortelco == null) ? '' : this.donortelco);
            }
            if (this.label != null) {
                Dom.XmlNode labelNode = outerNode.addChildElement('label', 'http://schemas.grexx.net/atalanta/connect', '');
                labelNode.addTextNode((this.label == null) ? '' : this.label);
            }
            Dom.XmlNode phonenumbertypeNode = outerNode.addChildElement('phonenumbertype', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.phonenumbertype != null) {
                phonenumbertypeNode.addTextNode(String.valueOf(this.phonenumbertype));
            }
            if (this.subscriptiontype != null) {
            Dom.XmlNode subscriptiontypeNode = outerNode.addChildElement('subscriptiontype', 'http://schemas.grexx.net/atalanta/connect', '');
                subscriptiontypeNode.addTextNode(this.subscriptiontype);
            }
            Dom.XmlNode listedinphonebookNode = outerNode.addChildElement('listedinphonebook', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.listedinphonebook != null) {
                listedinphonebookNode.addTextNode(String.valueOf(this.listedinphonebook));
            }
            Dom.XmlNode wishdateNode = outerNode.addChildElement('wishdate', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.wishdate != null) {
                wishdateNode.addTextNode(this.wishdate);
            }
            Dom.XmlNode blockservicenumberNode = outerNode.addChildElement('blockservicenumber', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.blockservicenumber != null) {
                blockservicenumberNode.addTextNode(String.valueOf(this.blockservicenumber));
            }
            Dom.XmlNode blockroamingNode = outerNode.addChildElement('blockroaming', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.blockroaming != null) {
                blockroamingNode.addTextNode(String.valueOf(this.blockroaming));
            }
            Dom.XmlNode blockcalltointernationalNode = outerNode.addChildElement('blockcalltointernational', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.blockcalltointernational != null) {
                blockcalltointernationalNode.addTextNode(String.valueOf(this.blockcalltointernational));
            }
            Dom.XmlNode blockdataroamingNode = outerNode.addChildElement('blockdataroaming', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.blockdataroaming != null) {
                blockdataroamingNode.addTextNode(String.valueOf(this.blockdataroaming));
            }
            Dom.XmlNode isprivatenumberNode = outerNode.addChildElement('isprivatenumber', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.isprivatenumber != null) {
                isprivatenumberNode.addTextNode(String.valueOf(this.isprivatenumber));
            }
            if (this.customernumber != null) {
                Dom.XmlNode customernumberNode = outerNode.addChildElement('customernumber', 'http://schemas.grexx.net/atalanta/connect', '');
                customernumberNode.addTextNode((this.customernumber == null) ? '' : this.customernumber);
            }
            if (this.customersimcardnumber != null) {
                Dom.XmlNode customersimcardnumberNode = outerNode.addChildElement('customersimcardnumber', 'http://schemas.grexx.net/atalanta/connect', '');
                customersimcardnumberNode.addTextNode((this.customersimcardnumber == null) ? '' : this.customersimcardnumber);
            }
            if (this.firstname != null) {
                Dom.XmlNode firstnameNode = outerNode.addChildElement('firstname', 'http://schemas.grexx.net/atalanta/connect', '');
                firstnameNode.addTextNode((this.firstname == null) ? '' : this.firstname);
            }
            if (this.middlename != null) {
                Dom.XmlNode middlenameNode = outerNode.addChildElement('middlename', 'http://schemas.grexx.net/atalanta/connect', '');
                middlenameNode.addTextNode((this.middlename == null) ? '' : this.middlename);
            }
            Dom.XmlNode lastnameNode = outerNode.addChildElement('lastname', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.lastname != null) {
                lastnameNode.addTextNode(this.lastname);
            }
            Dom.XmlNode streetNode = outerNode.addChildElement('street', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.street != null) {
                streetNode.addTextNode(this.street);
            }
            Dom.XmlNode housenrNode = outerNode.addChildElement('housenr', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.housenr != null) {
                housenrNode.addTextNode(this.housenr);
            }
            if (this.housenrext != null) {
                Dom.XmlNode housenrextNode = outerNode.addChildElement('housenrext', 'http://schemas.grexx.net/atalanta/connect', '');
                housenrextNode.addTextNode((this.housenrext == null) ? '' : this.housenrext);
            }
            Dom.XmlNode zipcodeNode = outerNode.addChildElement('zipcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.zipcode != null) {
                zipcodeNode.addTextNode(this.zipcode);
            }
            Dom.XmlNode cityNode = outerNode.addChildElement('city', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.city != null) {
                cityNode.addTextNode(this.city);
            }
            if (this.vamoid != null) {
                Dom.XmlNode vamoidNode = outerNode.addChildElement('vamoid', 'http://schemas.grexx.net/atalanta/connect', '');
                vamoidNode.addTextNode((this.vamoid == null) ? '' : this.vamoid);
            }            
            WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_element modulesObj = this.modules;
            if (modulesObj != null) {
            Dom.XmlNode modulesNode = outerNode.addChildElement('modules', 'http://schemas.grexx.net/atalanta/connect', '');
                modulesObj.populateXmlNode(modulesNode);
            }
            if (this.externalproductid != null) {
                Dom.XmlNode externalproductidNode = outerNode.addChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect', '');
                externalproductidNode.addTextNode((this.externalproductid == null) ? '' : this.externalproductid);
            }
            if (this.contractterminationdate != null) {
                Dom.XmlNode contractterminationdateNode = outerNode.addChildElement('contractterminationdate', 'http://schemas.grexx.net/atalanta/connect', '');
                contractterminationdateNode.addTextNode((this.contractterminationdate == null) ? '' : String.valueOf(this.contractterminationdate));
            }
            if (this.contractterminationduration != null) {
                Dom.XmlNode contractterminationdurationNode = outerNode.addChildElement('contractterminationduration', 'http://schemas.grexx.net/atalanta/connect', '');
                contractterminationdurationNode.addTextNode((this.contractterminationduration == null) ? '' : this.contractterminationduration);
            }
        }
    }
    public class order_mobilephonenumbers_mobilephonenumber_modules_element {
        public WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_module_element[] module;
        private String[] module_type_info = new String[] { 'module', 'http://schemas.grexx.net/atalanta/connect', '', '1', '-1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'module' };
        public order_mobilephonenumbers_mobilephonenumber_modules_element() {
        }
        public order_mobilephonenumbers_mobilephonenumber_modules_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            Dom.XmlNode[] moduleChildren = responseNode.getChildElements();
            WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_module_element[] moduleList = new List<WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_module_element> ();
            if (moduleChildren == null || moduleChildren.size() == 0) {
                this.module = null;
            } else {
                for (DOM.XmlNode childNode : moduleChildren) {
                    if (childNode.GetName() == 'module') {
                        WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_module_element Obj = new WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_module_element(childNode);
                        moduleList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.module = moduleList;
            }
            //System.debug(this.module);            
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_module_element[] moduleObj = this.module;
            if (moduleObj != null) {
                for (WSGrexxOrderControl.order_mobilephonenumbers_mobilephonenumber_modules_module_element element : moduleObj) {
                    Dom.XmlNode moduleNode = outerNode.addChildElement('module', 'http://schemas.grexx.net/atalanta/connect', '');
                    element.populateXmlNode(moduleNode);
                }
            }
        }
    }
    public class order_mobilephonenumbers_mobilephonenumber_modules_module_element {
        public String productcode;
        public String externalproductid;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] externalproductid_type_info = new String[] { 'externalproductid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'externalproductid' };
        public order_mobilephonenumbers_mobilephonenumber_modules_module_element() {
        }
        public order_mobilephonenumbers_mobilephonenumber_modules_module_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode externalproductidNode = responseNode.getChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalproductid = (externalproductidNode == null) ? null : externalproductidNode.getText();
            nodesParsed.add(externalproductidNode);
            //System.debug(this.externalproductid);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            if (this.externalproductid != null) {
                Dom.XmlNode externalproductidNode = outerNode.addChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect', '');
                externalproductidNode.addTextNode((this.externalproductid == null) ? '' : this.externalproductid);
            }
        }
    }
    public class order_other_element {
        public WSGrexxOrderControl.order_other_service_element[] service;
        private String[] service_type_info = new String[] { 'service', 'http://schemas.grexx.net/atalanta/connect', '', '1', '-1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'service' };
        public order_other_element() {
        }
        public order_other_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            Dom.XmlNode[] serviceChildren = responseNode.getChildElements();
            WSGrexxOrderControl.order_other_service_element[] serviceList = new List<WSGrexxOrderControl.order_other_service_element> ();
            if (serviceChildren == null || serviceChildren.size() == 0) {
                this.service = null;
            } else {
                for (DOM.XmlNode childNode : serviceChildren) {
                    if (childNode.GetName() == 'service') {
                        WSGrexxOrderControl.order_other_service_element Obj = new WSGrexxOrderControl.order_other_service_element(childNode);
                        serviceList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.service = serviceList;
            }
            //System.debug(this.service);           
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_other_service_element[] serviceObj = this.service;
            if (serviceObj != null) {
                for (WSGrexxOrderControl.order_other_service_element element : serviceObj) {
                    Dom.XmlNode serviceNode = outerNode.addChildElement('service', 'http://schemas.grexx.net/atalanta/connect', '');
                    element.populateXmlNode(serviceNode);
                }
            }
        }
    }
    public class order_other_service_element {
        public String productcode;
        public String name;
        public String externalproductid;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] name_type_info = new String[] { 'name', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] externalproductid_type_info = new String[] { 'externalproductid', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'name', 'externalproductid' };
        public order_other_service_element() {
        }
        public order_other_service_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode nameNode = responseNode.getChildElement('name', 'http://schemas.grexx.net/atalanta/connect');
            this.name = (nameNode == null) ? null : nameNode.getText();
            nodesParsed.add(nameNode);
            //System.debug(this.name);          
            DOM.XmlNode externalproductidNode = responseNode.getChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect');
            this.externalproductid = (externalproductidNode == null) ? null : externalproductidNode.getText();
            nodesParsed.add(externalproductidNode);
            //System.debug(this.externalproductid);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode nameNode = outerNode.addChildElement('name', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.name != null) {
                nameNode.addTextNode(this.name);
            }
            Dom.XmlNode externalproductidNode = outerNode.addChildElement('externalproductid', 'http://schemas.grexx.net/atalanta/connect', '');
            externalproductidNode.addTextNode((this.externalproductid == null) ? '' : this.externalproductid);
        }
    }
    public class order_services_element {
        public WSGrexxOrderControl.order_services_service_element[] service;
        private String[] service_type_info = new String[] { 'service', 'http://schemas.grexx.net/atalanta/connect', '', '1', '-1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'service' };
        public order_services_element() {
        }
        public order_services_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            Dom.XmlNode[] serviceChildren = responseNode.getChildElements();
            WSGrexxOrderControl.order_services_service_element[] serviceList = new List<WSGrexxOrderControl.order_services_service_element> ();
            if (serviceChildren == null || serviceChildren.size() == 0) {
                this.service = null;
            } else {
                for (DOM.XmlNode childNode : serviceChildren) {
                    if (childNode.GetName() == 'service') {
                        WSGrexxOrderControl.order_services_service_element Obj = new WSGrexxOrderControl.order_services_service_element(childNode);
                        serviceList.Add(Obj);
                        nodesParsed.add(childNode);
                    }
                }
                this.service = serviceList;
            }
            //System.debug(this.service);           
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {

            WSGrexxOrderControl.order_services_service_element[] serviceObj = this.service;
            if (serviceObj != null) {
                for (WSGrexxOrderControl.order_services_service_element element : serviceObj) {
                    Dom.XmlNode serviceNode = outerNode.addChildElement('service', 'http://schemas.grexx.net/atalanta/connect', '');
                    element.populateXmlNode(serviceNode);
                }
            }
        }
    }
    public class order_services_service_element {
        public String productcode;
        public Integer amount;
        public String name;
        private String[] productcode_type_info = new String[] { 'productcode', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] amount_type_info = new String[] { 'amount', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] name_type_info = new String[] { 'name', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'productcode', 'amount', 'name' };
        public order_services_service_element() {
        }
        public order_services_service_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode productcodeNode = responseNode.getChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect');
            this.productcode = (productcodeNode == null) ? null : productcodeNode.getText();
            nodesParsed.add(productcodeNode);
            //System.debug(this.productcode);           
            DOM.XmlNode amountNode = responseNode.getChildElement('amount', 'http://schemas.grexx.net/atalanta/connect');
            this.amount = (amountNode == null) ? null : Integer.valueOf(amountNode.getText());
            nodesParsed.add(amountNode);
            //System.debug(this.amount);            
            DOM.XmlNode nameNode = responseNode.getChildElement('name', 'http://schemas.grexx.net/atalanta/connect');
            this.name = (nameNode == null) ? null : nameNode.getText();
            nodesParsed.add(nameNode);
            //System.debug(this.name);          
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode productcodeNode = outerNode.addChildElement('productcode', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.productcode != null) {
                productcodeNode.addTextNode(this.productcode);
            }
            Dom.XmlNode amountNode = outerNode.addChildElement('amount', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.amount != null) {
                amountNode.addTextNode(String.valueOf(this.amount));
            }
            Dom.XmlNode nameNode = outerNode.addChildElement('name', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.name != null) {
                nameNode.addTextNode(this.name);
            }
        }
    }
    public class partner_element {
        public String partnerid;
        public String partnerpass;
        private String[] partnerid_type_info = new String[] { 'partnerid', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] partnerpass_type_info = new String[] { 'partnerpass', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'partnerid', 'partnerpass' };
        public partner_element() {
        }
        public partner_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode partneridNode = responseNode.getChildElement('partnerid', 'http://schemas.grexx.net/atalanta/connect');
            this.partnerid = (partneridNode == null) ? null : partneridNode.getText();
            nodesParsed.add(partneridNode);
            //System.debug(this.partnerid);         
            DOM.XmlNode partnerpassNode = responseNode.getChildElement('partnerpass', 'http://schemas.grexx.net/atalanta/connect');
            this.partnerpass = (partnerpassNode == null) ? null : partnerpassNode.getText();
            nodesParsed.add(partnerpassNode);
            //System.debug(this.partnerpass);           
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode partneridNode = outerNode.addChildElement('partnerid', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.partnerid != null) {
                partneridNode.addTextNode(this.partnerid);
            }
            Dom.XmlNode partnerpassNode = outerNode.addChildElement('partnerpass', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.partnerpass != null) {
                partnerpassNode.addTextNode(this.partnerpass);
            }
        }
    }
    public class grexxResponse_element {
        public WSGrexxOrderControl.HeaderResponse header;
        public WSGrexxOrderControl.Status status;
        private String[] header_type_info = new String[] { 'header', 'http://schemas.grexx.net/atalanta/connect', 'HeaderResponse', '0', '1', 'false' };
        private String[] status_type_info = new String[] { 'status', 'http://schemas.grexx.net/atalanta/connect', 'Status', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'header', 'status' };
        public grexxResponse_element() {
        }
        public grexxResponse_element(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            //System.assertEquals('OrderControlRequestResponse', responseNode.getName());
            DOM.XmlNode headerNode = responseNode.getChildElement('header', 'http://schemas.grexx.net/atalanta/connect');
            if (headerNode == null) {
                this.header = null;
            } else {
                WSGrexxOrderControl.HeaderResponse headerObj = new WSGrexxOrderControl.HeaderResponse(headerNode);
                nodesParsed.add(headerNode);
                this.header = headerObj;
            }
            //System.debug(this.header);            
            DOM.XmlNode statusNode = responseNode.getChildElement('status', 'http://schemas.grexx.net/atalanta/connect');
            if (statusNode == null) {
                this.status = null;
            } else {
                WSGrexxOrderControl.Status statusObj = new WSGrexxOrderControl.Status(statusNode);
                nodesParsed.add(statusNode);
                this.status = statusObj;
            }
            //System.debug(this.status);            
        }
    }
    public class HeaderResponse {
        public String transactionID;
        public String reference;
        private String[] transactionID_type_info = new String[] { 'transactionID', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] reference_type_info = new String[] { 'reference', 'http://schemas.grexx.net/atalanta/connect', 'string', '1', '1', 'true' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'transactionID', 'reference' };
        public HeaderResponse() {
        }
        public HeaderResponse(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode transactionIDNode = responseNode.getChildElement('transactionID', 'http://schemas.grexx.net/atalanta/connect');
            this.transactionID = (transactionIDNode == null) ? null : transactionIDNode.getText();
            nodesParsed.add(transactionIDNode);
            //System.debug(this.transactionID);         
            DOM.XmlNode referenceNode = responseNode.getChildElement('reference', 'http://schemas.grexx.net/atalanta/connect');
            this.reference = (referenceNode == null || referenceNode.getAttributeValue('nil', 'http://www.w3.org/2001/XMLSchema-instance') == 'true') ? null : referenceNode.getText();
            nodesParsed.add(referenceNode);
            //System.debug(this.reference);         
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode transactionIDNode = outerNode.addChildElement('transactionID', 'http://schemas.grexx.net/atalanta/connect', '');
            transactionIDNode.addTextNode((this.transactionID == null) ? '' : this.transactionID);
            Dom.XmlNode referenceNode = outerNode.addChildElement('reference', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.reference != null) {
                referenceNode.addTextNode(this.reference);
            }
        }
    }
    public class OrderControlRequestSoap {
        //public String endpoint_x = 'https://service-accept.grexx.today/interfaces/routit/5kuly7tonddhv0lik9t3/ordercontrol';
        public String endpoint_x = 'callout:Grexx/ordercontrol';
        public Map<String, String> inputHttpHeaders_x;
        public Map<String, String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'WSGrexxOrderControl' };

        public WSGrexxOrderControl.grexxResponse_element OrderControlRequest(WSGrexxOrderControl.header_element header, WSGrexxOrderControl.requestData_element requestData) {
            WSGrexxOrderControl.grexxRequest_element request_x = new WSGrexxOrderControl.grexxRequest_element();
            WSGrexxOrderControl.grexxResponse_element response_x;
            request_x.header = header;
            request_x.requestData = requestData;
            Map<String, WSGrexxOrderControl.grexxResponse_element> response_map_x = new Map<String, WSGrexxOrderControl.grexxResponse_element> ();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
                                     this,
                                     request_x,
                                     response_map_x,
                                     new String[] { endpoint_x,
                                        'http://schemas.grexx.net/atalanta/connect/OrderControlRequest',
                                        'http://schemas.grexx.net/atalanta/connect',
                                        'grexxRequest',
                                        'http://schemas.grexx.net/atalanta/connect',
                                        'grexxResponse',
                                        'WSGrexxOrderControl.grexxResponse_element' }
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }

        private DOM.XmlNode populateDoc(DOM.Document doc) {
            String env = 'http://schemas.xmlsoap.org/soap/envelope/';
            String xsi = 'http://www.w3.org/2001/XMLSchema-instance';
            String xsd = 'http://www.w3.org/2001/XMLSchema';

            DOM.XmlNode envelope = doc.createRootElement('Envelope', env, 'env');
            envelope.setNamespace('xsd', xsd);
            envelope.setNamespace('xsi', xsi);
            DOM.XmlNode header = envelope.addChildElement('Header', env, '');
            AddHeader(header);
            //System.debug(doc.toXmlString());
            //doc.load(doc.toXmlString().replaceAll('[(?=\\<)(.*?)(?:\\/\\>)]',''));
            DOM.XmlNode body = envelope.addChildElement('Body', env, '');
            return body;
        }

        private void AddHeader(DOM.XmlNode header) {
        }

        public WSGrexxOrderControl.grexxResponse_element OrderControlRequest_Http(WSGrexxOrderControl.header_element header, WSGrexxOrderControl.requestData_element requestData) {
            DOM.Document doc = new DOM.Document();
            DOM.XmlNode body = populateDoc(doc);
            DOM.XmlNode methodNode = body.addChildElement('OrderControlRequest', 'http://schemas.grexx.net/atalanta/connect', '');
            WSGrexxOrderControl.grexxRequest_element request_x = new WSGrexxOrderControl.grexxRequest_element(header, requestData);
            request_x.populateXmlNode(methodNode);

            HttpRequest req = new HttpRequest();
            req.setEndpoint(endpoint_x);
            req.setTimeout(120000);
            req.setMethod('POST');
            req.setHeader('Content-Type', 'text/xml; charset=UTF-8');
            req.setHeader('SOAPAction', 'http://schemas.grexx.net/atalanta/connect/OrderControlRequest');
           
            system.debug('$$$$$$ doc. toXmlString() ' + doc.toXmlString());
            req.setBodyDocument(doc);
            //DOM.Document cleanDoc = new DOM.Document();
            //cleanDoc.load(doc.toXmlString().replaceAll('(?=\\<)(.*?)(?:\\/\\>)',''));
            System.debug(req.getBody());
            Http http = new Http();

            HTTPResponse res = http.send(req);
            if (res.getStatusCode() == 500) {
                throw new grexxException('Grexx reported an internal server error.<br />request:<br />' + doc.toXmlString().escapeXml()
                                         + '<br /><br /><a href="mailto:sandertriebert@grexx.net?subject=internal server error (Mobile Miles)&body=Dear,%0D%0AGrexx reported an \'internal server error\' (statuscode 500), request:%0D%0A%0D%0A' + doc.toXmlString().escapeXml() + '"><h1>Email dit naar grexx</h1></a>');
            }
            Dom.Document responseDoc = res.getBodyDocument();
            Dom.XmlNode rootNode = responseDoc.getRootElement();
            Dom.XmlNode bodyNode = rootNode.getChildElement('Body', 'http://schemas.xmlsoap.org/soap/envelope/');
            Dom.XmlNode grexxResponseNode = bodyNode.getChildElement('grexxResponse', 'http://schemas.grexx.net/atalanta/connect');

            WSGrexxOrderControl.grexxResponse_element response_x = new WSGrexxOrderControl.grexxResponse_element(grexxResponseNode);
            return response_x;
        }
    }
    public class Status {
        public Integer code;
        public String message;
        public String description;
        private String[] code_type_info = new String[] { 'code', 'http://schemas.grexx.net/atalanta/connect', 'int', '1', '1', 'false' };
        private String[] message_type_info = new String[] { 'message', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] description_type_info = new String[] { 'description', 'http://schemas.grexx.net/atalanta/connect', 'string', '0', '1', 'false' };
        private String[] apex_schema_type_info = new String[] { 'http://schemas.grexx.net/atalanta/connect', 'true', 'false' };
        private String[] field_order_type_info = new String[] { 'code', 'message', 'description' };
        public Status() {
        }
        public Status(DOM.XmlNode responseNode) {
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode> ();
            DOM.XmlNode codeNode = responseNode.getChildElement('code', 'http://schemas.grexx.net/atalanta/connect');
            this.code = (codeNode == null) ? null : Integer.valueOf(codeNode.getText());
            nodesParsed.add(codeNode);
            //System.debug(this.code);          
            DOM.XmlNode messageNode = responseNode.getChildElement('message', 'http://schemas.grexx.net/atalanta/connect');
            this.message = (messageNode == null) ? null : messageNode.getText();
            nodesParsed.add(messageNode);
            //System.debug(this.message);           
            DOM.XmlNode descriptionNode = responseNode.getChildElement('description', 'http://schemas.grexx.net/atalanta/connect');
            this.description = (descriptionNode == null) ? null : descriptionNode.getText();
            nodesParsed.add(descriptionNode);
            //System.debug(this.description);           
        }
        public void populateXmlNode(Dom.XmlNode outerNode) {
            Dom.XmlNode codeNode = outerNode.addChildElement('code', 'http://schemas.grexx.net/atalanta/connect', '');
            if (this.code != null) {
                codeNode.addTextNode(String.valueOf(this.code));
            }
            Dom.XmlNode messageNode = outerNode.addChildElement('message', 'http://schemas.grexx.net/atalanta/connect', '');
            messageNode.addTextNode((this.message == null) ? '' : this.message);
            Dom.XmlNode descriptionNode = outerNode.addChildElement('description', 'http://schemas.grexx.net/atalanta/connect', '');
            descriptionNode.addTextNode((this.description == null) ? '' : this.description);
        }
    }
}