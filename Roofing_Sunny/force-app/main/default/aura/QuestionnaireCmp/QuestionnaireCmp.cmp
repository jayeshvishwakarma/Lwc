<aura:component extends="c:CruderCmp">
    <aura:handler name="init" value="{!this}" action="{!c.initialize}" description="init handeler"/>
    <aura:attribute type="String" name="reportStatusId" default="null" description="id of report status record"/>
    <aura:attribute type="String" name="parentId" default="null" description="to get questionnaire information"/>
    <aura:attribute type="String" name="recordId" default="null" description="to save answers to this record"/>
    <aura:attribute type='boolean' name='isReset' default='false' description='to check if the request is for resetting'/>
    <aura:attribute type='boolean' name='isRelaunch' default='false' description='to check if the request from relaunch link'/>
    <aura:attribute type="Integer" name="maxQuestionsOnPage" default="0" description="max questions allowed on a page"/>
    <aura:attribute type="Boolean" name="displaySpinner" default="false" description="a boolean which decides when to display spinner"/>
    <aura:attribute type="Object[]" name="currentPageAnswerList" default="[]" description="after click of next, answers will be saved from this array"/>
    <aura:attribute type="Object[]" name="sectionListToDisplay" default="[]" description="to show current set of displayable sections"/>
    <aura:attribute type="Boolean" name="isInitialLoad" default="true" description="marker that tells whether the current page is first or not"/>
    <aura:attribute type="Object[]" name="currentSQMarkList" default="[]" description="currentpage markerarray for latest expected answer which contains to question"/>
    <aura:attribute type="Object[]" name="completedQuestions" default="[]" description="List of completed questions used for back button"/>
    <aura:attribute type="Object[]" name="questionsAlreadyLoaded" default="[]" description="List of completed questions used for next button"/>
    <aura:attribute type="Object[]" name="questionsAlreadyAnswered" default="[]" description="List of completed answers"/>
    <aura:attribute type="String[]" name="toSuccessfulSQIdList" default="[]" description="next page successful dependent toSequenceQuestions Id list"/>
    <aura:attribute type="String[]" name="currentPageAnsweredSQIdList" default="[]" description="answered sequence question Id list of current page"/>
    <aura:attribute type="String" name="currentReportStatus" default="" description="current filled status of questionnaire"/>
    <aura:attribute type="String" name="questionnaireHeading" default="" />
    <aura:attribute type="date" name="currentDate" default="" />
    <aura:attribute type="decimal" name="rating" default="" />
    <aura:attribute type="decimal" name="index" default="" />
    <aura:attribute type="string" name="question" default="" />
    <aura:attribute type="Integer" name="pageNumber" default="1" description="Currently in which page"/>
    <aura:attribute type="Integer[]" name="MaxPriority" default="[]" description="Maximun Priority in Page"/>    
    <aura:attribute type="Integer[]" name="MinPriority" default="[]" description="Minimum Priority in Page"/>
    <aura:attribute type="Object[]" name="answer" default="[]" description="answer Priority in Page"/>
    <aura:attribute type="Boolean" name="backPressed" default="0" description="Check if back button is pressed"/>
    <aura:attribute type="String" name="status" default="Staus of of Questionaire" />
    <aura:attribute name="optionsPage" type="string[]" />
    <aura:attribute name="selectedPage" type="string" />
    <aura:attribute type="Integer" name="maxPage" default="0" description="max page"/>
    
   <!-- <aura:handler name="change" value="{!v.currentDate}" action="{!c.markAnswer}"/> -->
    <style>
        .assistiveText{
        display:none;
        }
        .datePicker-openIcon display{
        display:none;
        }
        .uiInputDate+.display, .uiInputDate .display {
        position:absolute;
        margin-left:100%;
        
        margin-top:1%;
        }
    </style>
    <div class="alert-container">{!v.body}</div>    
    <div class="containerC">
        <aura:renderIf isTrue="{!(v.displaySpinner == false)}">            
            <aura:if isTrue="{!(v.sectionListToDisplay!='null' &amp;&amp; v.sectionListToDisplay.length!=0)}">
                <div class="page-headerC">
                    <div class="slds-grid  slds-wrap slds-grid--pull-padded slds-grid--vertical-align-center">
                        <div class="slds-col slds-size--1-of-1 slds-medium-size--2-of-12 slds-large-size--2-of-12">
                            <img src="/resource/1474443457000/certainteed_logo" class="transitionC growC" style="max-width:178px;min-width:178px;"/>
                        </div>
                        <div class="slds-col slds-size--1-of-1 slds-medium-size--10-of-12 slds-large-size--10-of-12">
                            <div class="slds-grid">
                                <div class="slds-col slds-size--1-of-1 slds-align--absolute-center">
                                    <p class="slds-text-heading--large media-marginC transitionC growC page-heading-textC">{!v.questionnaireHeading}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="page-bodyC slds-p-around--x-large">
                    <aura:iteration items="{!v.sectionListToDisplay}" var="section">
                        <div class="sectionC">
                            <div class="slds-text-heading--large section-headerC">{!section.sectionHeading}</div>
                            <div class="heading-breakC"></div>
                            <div class="section-bodyC slds-p-left--small slds-p-right--small">
                                <aura:iteration items="{!section.questionList}" var="questionItem" indexvar="{!v.index}">
                                    <div class="question-textC">
                                        <aura:if isTrue="{!questionItem.Question__r.Mandatory__c}">
                                            <span class="redC">*
                                            </span>
                                        </aura:if>
                                        {!questionItem.Question__r.Question_Value__c}
                                    </div>
                                    <div class="question-answer-breakC"></div>
                                    <aura:if isTrue="{!questionItem.Question__r.Expected_Answers__r}">
                                        <div class="options-containerC">
                                            <aura:iteration items="{!questionItem.Question__r.Expected_Answers__r}" var="option" indexvar="index">
                                                <aura:if isTrue="{!(questionItem.Question__r.Type_of_Question__c == 'Single select')}">
                                                    <div class="question-optionC">
                                                        <label class="slds-radio">
                                                            <ui:inputRadio name="{!questionItem.Name}" change="{!c.markAnswer}" updateOn="change" labelClass="{!questionItem}" text="{!(option.Id)}" value="{!option.Name}"/>
                                                            <span class="slds-radio--faux"></span>
                                                            <span class="slds-form-element__label expected-textC">&nbsp;&nbsp;{!option.Expected_Answer_Value__c}</span>
                                                        </label>
                                                    </div>
                                                </aura:if>
                                                <aura:if isTrue="{!(questionItem.Question__r.Type_of_Question__c == 'Multiple select')}">
                                                    <div class="question-optionC">
                                                        <label class="slds-checkbox">
                                                            <aura:if isTrue="{!(option.Name == true)}">                                               
                                                                <ui:inputCheckbox name="{!questionItem.Name}" class="{!'val-'+ option.Name}" change="{!c.markAnswer}" updateOn="change" labelClass="{!questionItem}" text="{!(option.Id)}" value="true"/>
                                                            </aura:if>
                                                            <aura:if isTrue="{!(option.Name == false)}">                                               
                                                                <ui:inputCheckbox name="{!questionItem.Name}" class="{!'val-'+ option.Name}" change="{!c.markAnswer}" updateOn="change" labelClass="{!questionItem}" text="{!(option.Id)}" value="{!option.Name}"/>
                                                            </aura:if>
                                                            <span class="slds-checkbox--faux"></span>
                                                            <span class="slds-form-element__label expected-textC">&nbsp;&nbsp;{!option.Expected_Answer_Value__c}</span>
                                                        </label>
                                                    </div>
                                                </aura:if>
                                            </aura:iteration></div>
                                        <aura:set attribute="else">
                                            <aura:if isTrue="{!(questionItem.Question__r.Type_of_Question__c == 'Date')}">
                                                <div class="textAnswer-container">
                                                    <div class="slds-form-element">
                                                        <div class="slds-form-element__control">
                                                            <ui:inputDate class="slds-input" labelClass="{!questionItem}" select="{!c.markAnswer}" displayDatePicker="true" value="{!questionItem.Name}" aura:id="qstn"/>                                                            
                                                            <!-- <ui:outputText value="{!questionItem}" aura:id="qstn"/> -->
                                                            <!--<input type="date" change="{!c.markAnswer}" class="slds-input" id="installDate" data-id="hello"/>-->
                                                        </div>
                                                    </div>
                                                </div>
                                            </aura:if>
                                            <aura:if isTrue="{!(questionItem.Question__r.Type_of_Question__c == 'Text')}">
                                                <div class="textAnswer-container">
                                                    <div class="slds-form-element">
                                                        <div class="slds-form-element__control">
                                                            <ui:inputTextArea class="slds-textarea" rows="5" keyup="{!c.markAnswer}" labelClass="{!questionItem}" updateOn="keyup" value='{!questionItem.Name}'/>
                                                        </div>
                                                    </div>
                                                </div>
                                            </aura:if>
                                            <aura:if isTrue="{!(questionItem.Question__r.Type_of_Question__c == 'Number')}">
                                                <div class="textAnswer-container">
                                                    <div class="slds-form-element">
                                                        <div class="slds-form-element__control">
                                                            <ui:inputText class="slds-textarea"  labelClass="{!questionItem}" updateOn="keyup" keyup="{!c.markAnswer}" value='{!questionItem.Name}'/> 
                                                            <!-- <input type="text" class="slds-textarea" onkeyup="{!C.validateNumber}"/> 
                                        <input id="textsearch" type="text" name="default" placeholder="Search Events..." onkeyup="{!c.validateNumber}"/> -->
                                                        </div>
                                                    </div>
                                                </div>
                                            </aura:if>
                                        </aura:set>
                                    </aura:if>
                                    
                                    <div class="question-breakC"></div>
                                </aura:iteration>
                            </div>
                        </div>
                        <div class="section-breakC"></div>
                    </aura:iteration>
                    <div class="slds-align--absolute-center">                          
                        <aura:renderIf isTrue="{!(v.pageNumber != 1)}">
                        <button class="slds-button slds-button--brand button-largeC button-smallC" onclick="{!c.back}">Back</button>          
                        </aura:renderIf>                                                                  
                        <!--<button class="slds-button slds-button-brand button-largeC button-smallC" onclick="{!c.test}">test</button> -->
                        <button class="slds-button slds-button--brand button-largeC button-smallC" onclick="{!c.saveAsDraft}">Save As Draft</button> 
                          <aura:renderIf isTrue="{!(v.pageNumber == v.maxPage)}">
                            <button class="slds-button slds-button--brand button-largeC button-smallC" onclick="{!c.submit}">Submit</button>          
                        </aura:renderIf>    
                        <aura:renderIf isTrue="{!(v.pageNumber != v.maxPage)}">
                            <button class="slds-button slds-button--brand button-largeC button-smallC" onclick="{!c.next}">Next</button>   
                        </aura:renderIf>   
                        <ui:inputSelect class="slds-button-space-left slds-button--brand button-largeC button-smallC" value="{!v.selectedPage}" change="{!c.pageSelected}">
                            <aura:iteration items="{!v.optionsPage}" var="no" >                                                                                                
                                <ui:inputSelectOption text="{!no}"/>
                            </aura:iteration>
                        </ui:inputSelect>
                    </div>
                </div>
            </aura:if>
        </aura:renderIf>
    </div>
    <aura:renderIf isTrue="{!(v.displaySpinner == true)}">
        <div class="slds-spinner_container" style="position:fixed">
            <div class="slds-spinner--brand slds-spinner slds-spinner--large" aria-hidden="false" role="alert">
                <div class="slds-spinner__dot-a"></div>
                <div class="slds-spinner__dot-b"></div>
            </div>
        </div>
    </aura:renderIf>
</aura:component>