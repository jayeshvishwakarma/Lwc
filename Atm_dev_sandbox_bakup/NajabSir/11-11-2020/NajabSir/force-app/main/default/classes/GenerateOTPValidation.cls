/**
* @File Name          : GenerateOTPValidation.cls
* @Description        :
* @Author             : Prabhat Sharma
* @Group              :
* @Last Modified By   : Rajesh Ramachandran
* @Last Modified On   : 12/2/2019, 11:42:08 PM
* @Modification Log   :
*==============================================================================
* Ver         Date                     Author                    Modification
*==============================================================================
* 1.0       11:52:23 AM               Prabhat Sharma           Initial Version
* 2.0       09:42:23 PM               Prabhat Sharma           Initial Version
**/


public without sharing class GenerateOTPValidation {

    /**
        Author: Prabhat Sharma
        Company: Techmatrix
        Description: Method to Save 6 digit OTP generated by Math.random in OTP Base Value and Populate Current Date and Time in OTP Generated Time.
        A Task will also be created which will be related to Contact Record Id.
        Inputs: 6 Digit OTP number and Contact Record ID
        Returns: void
        History:
        ================
        1.0     16 Jul 2019      Prabhat Sharma    Initial Version
    **/
    @AuraEnabled
    public static void saveOtp(String otpNumber,String recordId, Map<String, Object> params) {
        try{
            if(String.isNotBlank(otpNumber) && String.isNotBlank(recordId)){


                Id objRecordId = (Id)recordId;
                Schema.SObjectType objectType = objRecordId.getsobjecttype();
                //Commented By-: Nishant Prajapati    Date-: 22/11/2019    Description-: OTP SMS via SFMC api callout
                //create MC record to send OTP to customer via Marketing cloud
                //GenerateFilePublicURL.CreateMCRecord(ConstantsUtility.OTP_MC_TYPE, new set<Id> {objRecordId}, ConstantsUtility.OPPORTUNITY, '');
                  if(String.valueOf(objectType) == 'Opportunity'){
                      List<Opportunity> enquiry= [select id, Mobile_SFMC__c, Customer__c,Dealership_Channel__c from Opportunity WHERE Id=: recordId];
                      if(enquiry.size() > 0){
                          String mobilePhone= String.valueOf(enquiry[0].Mobile_SFMC__c);
                          if(String.isNotBlank(mobilePhone)){
                              if(!mobilePhone.startsWith(ConstantsUtility.COUNTRY_CODE)){
                                  mobilePhone= ConstantsUtility.COUNTRY_CODE+mobilePhone;
                              }
                              SFMCRealTimeAPIIntegration.otpCall(otpNumber, mobilePhone, enquiry[0].Customer__c,enquiry[0].Dealership_Channel__c, params);
                          }
                      }
                  } else if(String.valueOf(objectType) == 'Account'){
                        List<Account> accounts = [SELECT PersonMobilePhone FROM Account WHERE Id =: recordId];
                        if(accounts.size() > 0){
                            String mobilePhone = String.valueOf(accounts[0].PersonMobilePhone);
                            if(String.isNotBlank(mobilePhone)){
                                if(!mobilePhone.startsWith(ConstantsUtility.COUNTRY_CODE)){
                                    mobilePhone = ConstantsUtility.COUNTRY_CODE + mobilePhone;
                                }
                                String channel = 'Maruti';
                                User currentUser = [SELECT AccountId, Channel__c FROM User WHERE Id =: UserInfo.getUserId()];
                                if(currentUser.AccountId != null && String.isNotBlank(currentUser.Channel__c)){
                                    channel = currentUser.Channel__c;
                                }
                                SFMCRealTimeAPIIntegration.otpCall(otpNumber, mobilePhone, recordId, channel,params);
                            }
                        }
                  }
                  else if(String.valueOf(objectType) == 'Case'){
                        List<Case> cases = [SELECT Mobile_Number__c,Customer__c FROM Case WHERE Id =: recordId];
                        if(cases.size() > 0){
                            String mobilePhone = String.valueOf(cases[0].Mobile_Number__c);
                            if(String.isNotBlank(mobilePhone)){
                                if(!mobilePhone.startsWith(ConstantsUtility.COUNTRY_CODE)){
                                    mobilePhone = ConstantsUtility.COUNTRY_CODE + mobilePhone;
                                }
                                String channel = 'Maruti';
                                User currentUser = [SELECT AccountId, Channel__c FROM User WHERE Id =: UserInfo.getUserId()];
                                if(currentUser.AccountId != null && String.isNotBlank(currentUser.Channel__c)){
                                    channel = currentUser.Channel__c;
                                }
                                SFMCRealTimeAPIIntegration.otpCall(otpNumber, mobilePhone, cases[0].Customer__c, channel,params);
                            }
                        }
                  }
                  
                //Update the details on specified object

                sObject sObj = Schema.getGlobalDescribe().get(String.valueOf(objectType)).newSObject();
                sObj.put(ConstantsUtility.OTPBASEVALUE_CONST,otpNumber);
                sObj.put(ConstantsUtility.OTPGENERATED_CONST,System.now());
                sObj.put(ConstantsUtility.RECORDID_CONST,recordId);

                //Update contact record with the details
                update sObj;
            }
        }catch(System.DmlException ex){  ExceptionHandler.LogError('GenerateOTPValidation', ex.getMessage(),'Opportunity',recordId, null);throw new dmlException('Error: '+ex.getMessage());
        }

    }
}